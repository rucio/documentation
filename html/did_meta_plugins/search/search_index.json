{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"did_column_meta.html","title":"Did column meta","text":""},{"location":"did_column_meta.html#rucio.core.did_meta_plugins.did_column_meta.DidColumnMeta","title":"<code>DidColumnMeta()</code>","text":"<p>A metadata plugin to interact with the base did table metadata.</p>"},{"location":"did_column_meta.html#rucio.core.did_meta_plugins.did_column_meta.DidColumnMeta.get_metadata","title":"<code>get_metadata(scope, name, *, session)</code>","text":"<p>Get data identifier metadata.</p> <p>Parameters:</p> Name Type Description Default <code>scope</code> <p>The scope name.</p> required <code>name</code> <p>The data identifier name.</p> required <code>session</code> <code>Session</code> <p>The database session in use.</p> required"},{"location":"did_column_meta.html#rucio.core.did_meta_plugins.did_column_meta.DidColumnMeta.list_dids","title":"<code>list_dids(scope, filters, did_type='collection', ignore_case=False, limit=None, offset=None, long=False, recursive=False, ignore_dids=None, *, session)</code>","text":"<p>Search data identifiers.</p> <p>Parameters:</p> Name Type Description Default <code>scope</code> <p>the scope name.</p> required <code>filters</code> <p>dictionary of attributes by which the results should be filtered.</p> required <code>did_type</code> <p>the type of the did: all(container, dataset, file), collection(dataset or container), dataset, container, file.</p> <code>'collection'</code> <code>ignore_case</code> <p>ignore case distinctions.</p> <code>False</code> <code>limit</code> <p>limit number.</p> <code>None</code> <code>offset</code> <p>offset number.</p> <code>None</code> <code>long</code> <p>Long format option to display more information for each DID.</p> <code>False</code> <code>session</code> <code>Session</code> <p>The database session in use.</p> required <code>recursive</code> <p>Recursively list DIDs content.</p> <code>False</code> <code>ignore_dids</code> <p>List of DIDs to refrain from yielding.</p> <code>None</code>"},{"location":"did_column_meta.html#rucio.core.did_meta_plugins.did_column_meta.DidColumnMeta.delete_metadata","title":"<code>delete_metadata(scope, name, key, *, session=None)</code>","text":"<p>Deletes the metadata stored for the given key.</p> <p>Parameters:</p> Name Type Description Default <code>scope</code> <p>The scope of the did.</p> required <code>name</code> <p>The name of the did.</p> required <code>key</code> <p>Key of the metadata.</p> required"},{"location":"did_column_meta.html#rucio.core.did_meta_plugins.did_column_meta.DidColumnMeta.get_plugin_name","title":"<code>get_plugin_name()</code>","text":"<p>Returns a unique identifier for this plugin. This can be later used for filtering down results to this plugin only.</p> <p>Returns:</p> Type Description <p>The name of the plugin.</p>"},{"location":"elasticsearch_meta.html","title":"Elasticsearch meta","text":"<p>Elasticsearch based metadata plugin.</p>"},{"location":"elasticsearch_meta.html#rucio.core.did_meta_plugins.elasticsearch_meta.ElasticDidMeta","title":"<code>ElasticDidMeta(hosts=None, user=None, password=None, index=None, archive_index=None, use_ssl=False, verify_certs=True, ca_certs=None, client_cert=None, client_key=None, request_timeout=100, max_retries=3, retry_on_timeout=False)</code>","text":""},{"location":"elasticsearch_meta.html#rucio.core.did_meta_plugins.elasticsearch_meta.ElasticDidMeta.get_metadata","title":"<code>get_metadata(scope, name, *, session=None)</code>","text":"<p>Get data identifier metadata.</p> <p>Parameters:</p> Name Type Description Default <code>scope</code> <code>InternalScope</code> <p>The scope name</p> required <code>name</code> <code>str</code> <p>The data identifier name</p> required <code>session</code> <code>Optional[Session]</code> <p>The database session in use</p> <code>None</code> <p>Returns:</p> Type Description <code>dict[str, Any]</code> <p>The metadata for the did</p> <p>Raises:</p> Type Description <code>DataIdentifierNotFound</code> <p>If the DID metadata is not found.</p> <code>RucioException</code> <p>If another error occurs during the process.</p>"},{"location":"elasticsearch_meta.html#rucio.core.did_meta_plugins.elasticsearch_meta.ElasticDidMeta.set_metadata","title":"<code>set_metadata(scope, name, key, value, recursive=False, *, session=None)</code>","text":"<p>Set single metadata key.</p> <p>Parameters:</p> Name Type Description Default <code>scope</code> <code>InternalScope</code> <p>the scope of did</p> required <code>name</code> <code>str</code> <p>the name of the did</p> required <code>key</code> <code>str</code> <p>the key to be added</p> required <code>value</code> <code>str</code> <p>the value of the key to be added</p> required <code>recursive</code> <code>bool</code> <p>recurse into DIDs (not supported)</p> <code>False</code> <code>session</code> <code>Optional[Session]</code> <p>The database session in use</p> <code>None</code> <p>Raises:</p> Type Description <code>DataIdentifierNotFound</code> <p>If the DID is not found.</p> <code>RucioException</code> <p>If an error occurs while setting the metadata.</p>"},{"location":"elasticsearch_meta.html#rucio.core.did_meta_plugins.elasticsearch_meta.ElasticDidMeta.set_metadata_bulk","title":"<code>set_metadata_bulk(scope, name, meta, recursive=False, *, session=None)</code>","text":"<p>Bulk set metadata keys.</p> <p>Parameters:</p> Name Type Description Default <code>scope</code> <code>InternalScope</code> <p>the scope of did</p> required <code>name</code> <code>str</code> <p>the name of the did</p> required <code>meta</code> <code>dict[str, Any]</code> <p>dictionary of metadata keypairs to be added</p> required <code>recursive</code> <code>bool</code> <p>recurse into DIDs (not supported)</p> <code>False</code> <code>session</code> <code>Optional[Session]</code> <p>The database session in use</p> <code>None</code> <p>Raises:</p> Type Description <code>DataIdentifierNotFound</code> <p>If the DID is not found.</p> <code>UnsupportedOperation</code> <p>If recursive inserts are requested (currently unsupported).</p> <code>RucioException</code> <p>If an error occurs while setting the metadata.</p>"},{"location":"elasticsearch_meta.html#rucio.core.did_meta_plugins.elasticsearch_meta.ElasticDidMeta.delete_metadata","title":"<code>delete_metadata(scope, name, key, *, session=None)</code>","text":"<p>Delete a key from metadata.</p> <p>Parameters:</p> Name Type Description Default <code>scope</code> <code>InternalScope</code> <p>the scope of did</p> required <code>name</code> <code>str</code> <p>the name of the did</p> required <code>key</code> <code>str</code> <p>the key to be deleted</p> required <p>Raises:</p> Type Description <code>DataIdentifierNotFound</code> <p>If the DID is not found.</p> <code>RucioException</code> <p>If an error occurs while setting the metadata.</p>"},{"location":"elasticsearch_meta.html#rucio.core.did_meta_plugins.elasticsearch_meta.ElasticDidMeta.list_dids","title":"<code>list_dids(scope, filters, did_type='collection', ignore_case=False, limit=None, offset=None, long=False, recursive=False, ignore_dids=None, *, session=None)</code>","text":"<p>List DIDs (Data Identifier).</p> <p>Parameters:</p> Name Type Description Default <code>scope</code> <code>InternalScope</code> <p>The scope of the DIDs to search.</p> required <code>filters</code> <code>Union[list[dict[str, Any]], dict[str, Any]]</code> <p>The filters to apply to the DID search.</p> required <code>did_type</code> <code>Literal['all', 'collection', 'dataset', 'container', 'file']</code> <p>The type of DID (default is 'collection').</p> <code>'collection'</code> <code>ignore_case</code> <code>bool</code> <p>Whether to ignore case (default is False).</p> <code>False</code> <code>limit</code> <code>Optional[int]</code> <p>The maximum number of DIDs to return.</p> <code>None</code> <code>offset</code> <code>Optional[int]</code> <p>The starting point for the search (used for pagination).</p> <code>None</code> <code>long</code> <code>bool</code> <p>Whether to return extended information (scope, name, did_type, bytes, length) (default is False).</p> <code>False</code> <code>recursive</code> <code>bool</code> <p>Whether to search recursively (currently unsupported).</p> <code>False</code> <code>ignore_dids</code> <code>Optional[list]</code> <p>A list of DIDs to ignore (default is an empty list).</p> <code>None</code> <code>session</code> <code>Optional[Session]</code> <p>The database session in use.</p> <code>None</code> <p>Returns:</p> Type Description <code>Iterator[dict[str, Any]]</code> <p>A generator yielding DIDs as strings (when <code>long</code> is False) or dictionaries (when <code>long</code> is True).</p> <p>Raises:</p> Type Description <code>UnsupportedOperation</code> <p>If recursive searches are requested (currently unsupported).</p> <code>RucioException</code> <p>If an error occurs during the search.</p>"},{"location":"elasticsearch_meta.html#rucio.core.did_meta_plugins.elasticsearch_meta.ElasticDidMeta.on_delete","title":"<code>on_delete(scope, name, archive=False, session=None)</code>","text":"<p>Delete a document and optionally archive it.</p> <p>Parameters:</p> Name Type Description Default <code>scope</code> <code>InternalScope</code> <p>The scope of the document</p> required <code>name</code> <code>str</code> <p>The name of the document</p> required <code>archive</code> <code>bool</code> <p>Whether to archive the document before deletion</p> <code>False</code> <p>Raises:</p> Type Description <code>DataIdentifierNotFound</code> <p>If the DID is not found.</p> <code>RucioException</code> <p>If an error occurs while setting the metadata.</p>"},{"location":"elasticsearch_meta.html#rucio.core.did_meta_plugins.elasticsearch_meta.ElasticDidMeta.get_metadata_archived","title":"<code>get_metadata_archived(scope, name, session=None)</code>","text":"<p>Retrieve archived metadata for a given scope and name.</p> <p>Parameters:</p> Name Type Description Default <code>scope</code> <code>InternalScope</code> <p>The scope of the document</p> required <code>name</code> <code>str</code> <p>The name of the document</p> required <p>Returns:</p> Type Description <code>None</code> <p>The archived metadata or None if not found</p> <p>Raises:</p> Type Description <code>DataIdentifierNotFound</code> <p>If the DID is not found.</p> <code>RucioException</code> <p>If an error occurs while setting the metadata.</p>"},{"location":"elasticsearch_meta.html#rucio.core.did_meta_plugins.elasticsearch_meta.ElasticDidMeta.get_plugin_name","title":"<code>get_plugin_name()</code>","text":"<p>Returns a unique identifier for this plugin. This can be later used for filtering down results to this plugin only.</p> <p>Returns:</p> Type Description <code>str</code> <p>The name of the plugin</p>"},{"location":"json_meta.html","title":"Json meta","text":""},{"location":"json_meta.html#rucio.core.did_meta_plugins.json_meta.JSONDidMeta","title":"<code>JSONDidMeta()</code>","text":"<p>A plugin to store DID metadata on a table on the relational database, using JSON blobs</p>"},{"location":"json_meta.html#rucio.core.did_meta_plugins.json_meta.JSONDidMeta.get_metadata","title":"<code>get_metadata(scope, name, *, session)</code>","text":"<p>Get data identifier metadata (JSON)</p> <p>Parameters:</p> Name Type Description Default <code>scope</code> <p>The scope name.</p> required <code>name</code> <p>The data identifier name.</p> required <code>session</code> <code>Session</code> <p>The database session in use.</p> required"},{"location":"json_meta.html#rucio.core.did_meta_plugins.json_meta.JSONDidMeta.delete_metadata","title":"<code>delete_metadata(scope, name, key, *, session)</code>","text":"<p>Delete a key from the metadata column</p> <p>Parameters:</p> Name Type Description Default <code>scope</code> <p>the scope of did</p> required <code>name</code> <p>the name of the did</p> required <code>key</code> <p>the key to be deleted</p> required <code>session</code> <code>Session</code> <p>The database session in use.</p> required"},{"location":"json_meta.html#rucio.core.did_meta_plugins.json_meta.JSONDidMeta.get_plugin_name","title":"<code>get_plugin_name()</code>","text":"<p>Returns a unique identifier for this plugin. This can be later used for filtering down results to this plugin only.</p> <p>Returns:</p> Type Description <p>The name of the plugin.</p>"},{"location":"mongo_meta.html","title":"Mongo meta","text":""},{"location":"mongo_meta.html#rucio.core.did_meta_plugins.mongo_meta.MongoDidMeta","title":"<code>MongoDidMeta(host=None, port=None, db=None, collection=None, user=None, password=None)</code>","text":""},{"location":"mongo_meta.html#rucio.core.did_meta_plugins.mongo_meta.MongoDidMeta.get_metadata","title":"<code>get_metadata(scope, name, *, session=None)</code>","text":"<p>Get data identifier metadata.</p> <p>Parameters:</p> Name Type Description Default <code>scope</code> <p>The scope name</p> required <code>name</code> <p>The data identifier name</p> required <code>session</code> <code>Optional[Session]</code> <p>The database session in use</p> <code>None</code> <p>Returns:</p> Type Description <p>The metadata for the did</p>"},{"location":"mongo_meta.html#rucio.core.did_meta_plugins.mongo_meta.MongoDidMeta.set_metadata","title":"<code>set_metadata(scope, name, key, value, recursive=False, *, session=None)</code>","text":"<p>Set single metadata key.</p> <p>Parameters:</p> Name Type Description Default <code>scope</code> <p>the scope of did</p> required <code>name</code> <p>the name of the did</p> required <code>key</code> <p>the key to be added</p> required <code>value</code> <p>the value of the key to be added</p> required <code>recursive</code> <p>recurse into DIDs (not supported)</p> <code>False</code> <code>session</code> <code>Optional[Session]</code> <p>The database session in use</p> <code>None</code>"},{"location":"mongo_meta.html#rucio.core.did_meta_plugins.mongo_meta.MongoDidMeta.set_metadata_bulk","title":"<code>set_metadata_bulk(scope, name, metadata, recursive=False, *, session=None)</code>","text":"<p>Bulk set metadata keys.</p> <p>Parameters:</p> Name Type Description Default <code>scope</code> <p>the scope of did</p> required <code>name</code> <p>the name of the did</p> required <code>metadata</code> <p>dictionary of metadata keypairs to be added</p> required <code>recursive</code> <p>recurse into DIDs (not supported)</p> <code>False</code> <code>session</code> <code>Optional[Session]</code> <p>The database session in use</p> <code>None</code>"},{"location":"mongo_meta.html#rucio.core.did_meta_plugins.mongo_meta.MongoDidMeta.delete_metadata","title":"<code>delete_metadata(scope, name, key, *, session=None)</code>","text":"<p>Delete a key from metadata.</p> <p>Parameters:</p> Name Type Description Default <code>scope</code> <p>the scope of did</p> required <code>name</code> <p>the name of the did</p> required <code>key</code> <p>the key to be deleted</p> required"},{"location":"mongo_meta.html#rucio.core.did_meta_plugins.mongo_meta.MongoDidMeta.get_plugin_name","title":"<code>get_plugin_name()</code>","text":"<p>Returns a unique identifier for this plugin. This can be later used for filtering down results to this plugin only.</p> <p>Returns:</p> Type Description <p>The name of the plugin</p>"},{"location":"postgres_meta.html","title":"Postgres meta","text":""},{"location":"postgres_meta.html#rucio.core.did_meta_plugins.postgres_meta.ExternalPostgresJSONDidMeta","title":"<code>ExternalPostgresJSONDidMeta(host=None, port=None, db=None, user=None, password=None, db_schema=None, table=None, table_is_managed=None, table_column_vo=None, table_column_scope=None, table_column_name=None, table_column_data=None)</code>","text":""},{"location":"postgres_meta.html#rucio.core.did_meta_plugins.postgres_meta.ExternalPostgresJSONDidMeta._try_create_metadata_table","title":"<code>_try_create_metadata_table()</code>","text":"<p>Try to create a metadata table.</p>"},{"location":"postgres_meta.html#rucio.core.did_meta_plugins.postgres_meta.ExternalPostgresJSONDidMeta._verify_table_schema","title":"<code>_verify_table_schema(table_column_vo, table_column_scope, table_column_name, table_column_data)</code>","text":"<p>Rudimentary verification that the metadata table schema meets the requirements for the plugin.</p> <p>Should be called when using externally managed database tables as a sanity check.</p> <p>Parameters:</p> Name Type Description Default <code>table_column_vo</code> <p>The table column used for the vo</p> required <code>table_column_scope</code> <p>The table column used for the scope</p> required <code>table_column_name</code> <p>The table column used for the name</p> required <code>table_column_data</code> <p>The table column used for the data</p> required"},{"location":"postgres_meta.html#rucio.core.did_meta_plugins.postgres_meta.ExternalPostgresJSONDidMeta.get_metadata","title":"<code>get_metadata(scope, name, *, session=None)</code>","text":"<p>Get data identifier metadata.</p> <p>Parameters:</p> Name Type Description Default <code>scope</code> <p>The scope name</p> required <code>name</code> <p>The data identifier name</p> required <code>session</code> <code>Optional[Session]</code> <p>The database session in use</p> <code>None</code> <p>Returns:</p> Type Description <p>the metadata for the did</p>"},{"location":"postgres_meta.html#rucio.core.did_meta_plugins.postgres_meta.ExternalPostgresJSONDidMeta.set_metadata","title":"<code>set_metadata(scope, name, key, value, recursive=False, *, session=None)</code>","text":"<p>Set single metadata key.</p> <p>Parameters:</p> Name Type Description Default <code>scope</code> <p>the scope of did</p> required <code>name</code> <p>the name of the did</p> required <code>key</code> <p>the key to be added</p> required <code>value</code> <p>the value of the key to be added</p> required <code>recursive</code> <p>recurse into DIDs (not supported)</p> <code>False</code> <code>session</code> <code>Optional[Session]</code> <p>The database session in use</p> <code>None</code>"},{"location":"postgres_meta.html#rucio.core.did_meta_plugins.postgres_meta.ExternalPostgresJSONDidMeta.set_metadata_bulk","title":"<code>set_metadata_bulk(scope, name, metadata, recursive=False, *, session=None)</code>","text":"<p>Bulk set metadata keys.</p> <p>Parameters:</p> Name Type Description Default <code>scope</code> <p>the scope of did</p> required <code>name</code> <p>the name of the did</p> required <code>metadata</code> <p>dictionary of metadata keypairs to be added</p> required <code>recursive</code> <p>recurse into DIDs (not supported)</p> <code>False</code> <code>session</code> <code>Optional[Session]</code> <p>The database session in use</p> <code>None</code>"},{"location":"postgres_meta.html#rucio.core.did_meta_plugins.postgres_meta.ExternalPostgresJSONDidMeta.delete_metadata","title":"<code>delete_metadata(scope, name, key, *, session=None)</code>","text":"<p>Delete a key from metadata.</p> <p>Parameters:</p> Name Type Description Default <code>scope</code> <p>the scope of did</p> required <code>name</code> <p>the name of the did</p> required <code>key</code> <p>the key to be deleted</p> required <code>session</code> <code>Optional[Session]</code> <p>the database session in use</p> <code>None</code>"},{"location":"postgres_meta.html#rucio.core.did_meta_plugins.postgres_meta.ExternalPostgresJSONDidMeta.get_plugin_name","title":"<code>get_plugin_name()</code>","text":"<p>Returns a unique identifier for this plugin. This can be later used for filtering down results to this plugin only.</p> <p>Returns:</p> Type Description <p>The name of the plugin</p>"}]}