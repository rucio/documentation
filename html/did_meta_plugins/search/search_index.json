{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"did_column_meta.html","title":"Did column meta","text":""},{"location":"did_column_meta.html#rucio.core.did_meta_plugins.did_column_meta-classes","title":"Classes","text":""},{"location":"did_column_meta.html#rucio.core.did_meta_plugins.did_column_meta.DidColumnMeta","title":"DidColumnMeta","text":"<pre><code>DidColumnMeta()\n</code></pre> <p>A metadata plugin to interact with the base did table metadata.</p>"},{"location":"did_column_meta.html#rucio.core.did_meta_plugins.did_column_meta.DidColumnMeta-functions","title":"Functions","text":""},{"location":"did_column_meta.html#rucio.core.did_meta_plugins.did_column_meta.DidColumnMeta.get_metadata","title":"get_metadata","text":"<pre><code>get_metadata(scope, name, *, session)\n</code></pre> <p>Get data identifier metadata.</p> PARAMETER DESCRIPTION <code>scope</code> <p>The scope name.</p> <p> </p> <code>name</code> <p>The data identifier name.</p> <p> </p> <code>session</code> <p>The database session in use.</p> <p> TYPE: <code>Session</code> </p>"},{"location":"did_column_meta.html#rucio.core.did_meta_plugins.did_column_meta.DidColumnMeta.list_dids","title":"list_dids","text":"<pre><code>list_dids(\n    scope,\n    filters,\n    did_type=\"collection\",\n    ignore_case=False,\n    limit=None,\n    offset=None,\n    long=False,\n    recursive=False,\n    ignore_dids=None,\n    *,\n    session\n)\n</code></pre> <p>Search data identifiers.</p> PARAMETER DESCRIPTION <code>scope</code> <p>the scope name.</p> <p> </p> <code>filters</code> <p>dictionary of attributes by which the results should be filtered.</p> <p> </p> <code>did_type</code> <p>the type of the did: all(container, dataset, file), collection(dataset or container), dataset, container, file.</p> <p> DEFAULT: <code>'collection'</code> </p> <code>ignore_case</code> <p>ignore case distinctions.</p> <p> DEFAULT: <code>False</code> </p> <code>limit</code> <p>limit number.</p> <p> DEFAULT: <code>None</code> </p> <code>offset</code> <p>offset number.</p> <p> DEFAULT: <code>None</code> </p> <code>long</code> <p>Long format option to display more information for each DID.</p> <p> DEFAULT: <code>False</code> </p> <code>session</code> <p>The database session in use.</p> <p> TYPE: <code>Session</code> </p> <code>recursive</code> <p>Recursively list DIDs content.</p> <p> DEFAULT: <code>False</code> </p> <code>ignore_dids</code> <p>List of DIDs to refrain from yielding.</p> <p> DEFAULT: <code>None</code> </p>"},{"location":"did_column_meta.html#rucio.core.did_meta_plugins.did_column_meta.DidColumnMeta.delete_metadata","title":"delete_metadata","text":"<pre><code>delete_metadata(scope, name, key, *, session=None)\n</code></pre> <p>Deletes the metadata stored for the given key.</p> PARAMETER DESCRIPTION <code>scope</code> <p>The scope of the did.</p> <p> </p> <code>name</code> <p>The name of the did.</p> <p> </p> <code>key</code> <p>Key of the metadata.</p> <p> </p>"},{"location":"did_column_meta.html#rucio.core.did_meta_plugins.did_column_meta.DidColumnMeta.get_plugin_name","title":"get_plugin_name","text":"<pre><code>get_plugin_name()\n</code></pre> <p>Returns a unique identifier for this plugin. This can be later used for filtering down results to this plugin only.</p> RETURNS DESCRIPTION <p>The name of the plugin.</p>"},{"location":"did_column_meta.html#rucio.core.did_meta_plugins.did_column_meta-functions","title":"Functions","text":""},{"location":"elasticsearch_meta.html","title":"Elasticsearch meta","text":"<p>Elasticsearch based metadata plugin.</p>"},{"location":"elasticsearch_meta.html#rucio.core.did_meta_plugins.elasticsearch_meta-classes","title":"Classes","text":""},{"location":"elasticsearch_meta.html#rucio.core.did_meta_plugins.elasticsearch_meta.ElasticDidMeta","title":"ElasticDidMeta","text":"<pre><code>ElasticDidMeta(\n    hosts=None,\n    user=None,\n    password=None,\n    index=None,\n    archive_index=None,\n    use_ssl=False,\n    verify_certs=True,\n    ca_certs=None,\n    client_cert=None,\n    client_key=None,\n    request_timeout=100,\n    max_retries=3,\n    retry_on_timeout=False,\n)\n</code></pre>"},{"location":"elasticsearch_meta.html#rucio.core.did_meta_plugins.elasticsearch_meta.ElasticDidMeta-functions","title":"Functions","text":""},{"location":"elasticsearch_meta.html#rucio.core.did_meta_plugins.elasticsearch_meta.ElasticDidMeta.get_metadata","title":"get_metadata","text":"<pre><code>get_metadata(scope, name, *, session=None)\n</code></pre> <p>Get data identifier metadata.</p> PARAMETER DESCRIPTION <code>scope</code> <p>The scope name</p> <p> TYPE: <code>InternalScope</code> </p> <code>name</code> <p>The data identifier name</p> <p> TYPE: <code>str</code> </p> <code>session</code> <p>The database session in use</p> <p> TYPE: <code>Optional[Session]</code> DEFAULT: <code>None</code> </p> RETURNS DESCRIPTION <code>dict[str, Any]</code> <p>The metadata for the did</p> RAISES DESCRIPTION <code>DataIdentifierNotFound</code> <p>If the DID metadata is not found.</p> <code>RucioException</code> <p>If another error occurs during the process.</p>"},{"location":"elasticsearch_meta.html#rucio.core.did_meta_plugins.elasticsearch_meta.ElasticDidMeta.set_metadata","title":"set_metadata","text":"<pre><code>set_metadata(\n    scope,\n    name,\n    key,\n    value,\n    recursive=False,\n    *,\n    session=None\n)\n</code></pre> <p>Set single metadata key.</p> PARAMETER DESCRIPTION <code>scope</code> <p>the scope of did</p> <p> TYPE: <code>InternalScope</code> </p> <code>name</code> <p>the name of the did</p> <p> TYPE: <code>str</code> </p> <code>key</code> <p>the key to be added</p> <p> TYPE: <code>str</code> </p> <code>value</code> <p>the value of the key to be added</p> <p> TYPE: <code>str</code> </p> <code>recursive</code> <p>recurse into DIDs (not supported)</p> <p> TYPE: <code>bool</code> DEFAULT: <code>False</code> </p> <code>session</code> <p>The database session in use</p> <p> TYPE: <code>Optional[Session]</code> DEFAULT: <code>None</code> </p> RAISES DESCRIPTION <code>DataIdentifierNotFound</code> <p>If the DID is not found.</p> <code>RucioException</code> <p>If an error occurs while setting the metadata.</p>"},{"location":"elasticsearch_meta.html#rucio.core.did_meta_plugins.elasticsearch_meta.ElasticDidMeta.set_metadata_bulk","title":"set_metadata_bulk","text":"<pre><code>set_metadata_bulk(\n    scope, name, meta, recursive=False, *, session=None\n)\n</code></pre> <p>Bulk set metadata keys.</p> PARAMETER DESCRIPTION <code>scope</code> <p>the scope of did</p> <p> TYPE: <code>InternalScope</code> </p> <code>name</code> <p>the name of the did</p> <p> TYPE: <code>str</code> </p> <code>meta</code> <p>dictionary of metadata keypairs to be added</p> <p> TYPE: <code>dict[str, Any]</code> </p> <code>recursive</code> <p>recurse into DIDs (not supported)</p> <p> TYPE: <code>bool</code> DEFAULT: <code>False</code> </p> <code>session</code> <p>The database session in use</p> <p> TYPE: <code>Optional[Session]</code> DEFAULT: <code>None</code> </p> RAISES DESCRIPTION <code>DataIdentifierNotFound</code> <p>If the DID is not found.</p> <code>UnsupportedOperation</code> <p>If recursive inserts are requested (currently unsupported).</p> <code>RucioException</code> <p>If an error occurs while setting the metadata.</p>"},{"location":"elasticsearch_meta.html#rucio.core.did_meta_plugins.elasticsearch_meta.ElasticDidMeta.delete_metadata","title":"delete_metadata","text":"<pre><code>delete_metadata(scope, name, key, *, session=None)\n</code></pre> <p>Delete a key from metadata.</p> PARAMETER DESCRIPTION <code>scope</code> <p>the scope of did</p> <p> TYPE: <code>InternalScope</code> </p> <code>name</code> <p>the name of the did</p> <p> TYPE: <code>str</code> </p> <code>key</code> <p>the key to be deleted</p> <p> TYPE: <code>str</code> </p> RAISES DESCRIPTION <code>DataIdentifierNotFound</code> <p>If the DID is not found.</p> <code>RucioException</code> <p>If an error occurs while setting the metadata.</p>"},{"location":"elasticsearch_meta.html#rucio.core.did_meta_plugins.elasticsearch_meta.ElasticDidMeta.list_dids","title":"list_dids","text":"<pre><code>list_dids(\n    scope,\n    filters,\n    did_type=\"collection\",\n    ignore_case=False,\n    limit=None,\n    offset=None,\n    long=False,\n    recursive=False,\n    ignore_dids=None,\n    *,\n    session=None\n)\n</code></pre> <p>List DIDs (Data Identifier).</p> PARAMETER DESCRIPTION <code>scope</code> <p>The scope of the DIDs to search.</p> <p> TYPE: <code>InternalScope</code> </p> <code>filters</code> <p>The filters to apply to the DID search.</p> <p> TYPE: <code>Union[list[dict[str, Any]], dict[str, Any]]</code> </p> <code>did_type</code> <p>The type of DID (default is 'collection').</p> <p> TYPE: <code>Literal['all', 'collection', 'dataset', 'container', 'file']</code> DEFAULT: <code>'collection'</code> </p> <code>ignore_case</code> <p>Whether to ignore case (default is False).</p> <p> TYPE: <code>bool</code> DEFAULT: <code>False</code> </p> <code>limit</code> <p>The maximum number of DIDs to return.</p> <p> TYPE: <code>Optional[int]</code> DEFAULT: <code>None</code> </p> <code>offset</code> <p>The starting point for the search (used for pagination).</p> <p> TYPE: <code>Optional[int]</code> DEFAULT: <code>None</code> </p> <code>long</code> <p>Whether to return extended information (scope, name, did_type, bytes, length) (default is False).</p> <p> TYPE: <code>bool</code> DEFAULT: <code>False</code> </p> <code>recursive</code> <p>Whether to search recursively (currently unsupported).</p> <p> TYPE: <code>bool</code> DEFAULT: <code>False</code> </p> <code>ignore_dids</code> <p>A list of DIDs to ignore (default is an empty list).</p> <p> TYPE: <code>Optional[list]</code> DEFAULT: <code>None</code> </p> <code>session</code> <p>The database session in use.</p> <p> TYPE: <code>Optional[Session]</code> DEFAULT: <code>None</code> </p> RETURNS DESCRIPTION <code>Iterator[dict[str, Any]]</code> <p>A generator yielding DIDs as strings (when <code>long</code> is False) or dictionaries (when <code>long</code> is True).</p> RAISES DESCRIPTION <code>UnsupportedOperation</code> <p>If recursive searches are requested (currently unsupported).</p> <code>RucioException</code> <p>If an error occurs during the search.</p>"},{"location":"elasticsearch_meta.html#rucio.core.did_meta_plugins.elasticsearch_meta.ElasticDidMeta.on_delete","title":"on_delete","text":"<pre><code>on_delete(scope, name, archive=False, session=None)\n</code></pre> <p>Delete a document and optionally archive it.</p> PARAMETER DESCRIPTION <code>scope</code> <p>The scope of the document</p> <p> TYPE: <code>InternalScope</code> </p> <code>name</code> <p>The name of the document</p> <p> TYPE: <code>str</code> </p> <code>archive</code> <p>Whether to archive the document before deletion</p> <p> TYPE: <code>bool</code> DEFAULT: <code>False</code> </p> RAISES DESCRIPTION <code>DataIdentifierNotFound</code> <p>If the DID is not found.</p> <code>RucioException</code> <p>If an error occurs while setting the metadata.</p>"},{"location":"elasticsearch_meta.html#rucio.core.did_meta_plugins.elasticsearch_meta.ElasticDidMeta.get_metadata_archived","title":"get_metadata_archived","text":"<pre><code>get_metadata_archived(scope, name, session=None)\n</code></pre> <p>Retrieve archived metadata for a given scope and name.</p> PARAMETER DESCRIPTION <code>scope</code> <p>The scope of the document</p> <p> TYPE: <code>InternalScope</code> </p> <code>name</code> <p>The name of the document</p> <p> TYPE: <code>str</code> </p> RETURNS DESCRIPTION <code>None</code> <p>The archived metadata or None if not found</p> RAISES DESCRIPTION <code>DataIdentifierNotFound</code> <p>If the DID is not found.</p> <code>RucioException</code> <p>If an error occurs while setting the metadata.</p>"},{"location":"elasticsearch_meta.html#rucio.core.did_meta_plugins.elasticsearch_meta.ElasticDidMeta.get_plugin_name","title":"get_plugin_name","text":"<pre><code>get_plugin_name()\n</code></pre> <p>Returns a unique identifier for this plugin. This can be later used for filtering down results to this plugin only.</p> RETURNS DESCRIPTION <code>str</code> <p>The name of the plugin</p>"},{"location":"json_meta.html","title":"Json meta","text":""},{"location":"json_meta.html#rucio.core.did_meta_plugins.json_meta-classes","title":"Classes","text":""},{"location":"json_meta.html#rucio.core.did_meta_plugins.json_meta.JSONDidMeta","title":"JSONDidMeta","text":"<pre><code>JSONDidMeta()\n</code></pre> <p>A plugin to store DID metadata on a table on the relational database, using JSON blobs</p>"},{"location":"json_meta.html#rucio.core.did_meta_plugins.json_meta.JSONDidMeta-functions","title":"Functions","text":""},{"location":"json_meta.html#rucio.core.did_meta_plugins.json_meta.JSONDidMeta.get_metadata","title":"get_metadata","text":"<pre><code>get_metadata(scope, name, *, session)\n</code></pre> <p>Get data identifier metadata (JSON)</p> PARAMETER DESCRIPTION <code>scope</code> <p>The scope name.</p> <p> </p> <code>name</code> <p>The data identifier name.</p> <p> </p> <code>session</code> <p>The database session in use.</p> <p> TYPE: <code>Session</code> </p>"},{"location":"json_meta.html#rucio.core.did_meta_plugins.json_meta.JSONDidMeta.delete_metadata","title":"delete_metadata","text":"<pre><code>delete_metadata(scope, name, key, *, session)\n</code></pre> <p>Delete a key from the metadata column</p> PARAMETER DESCRIPTION <code>scope</code> <p>the scope of did</p> <p> </p> <code>name</code> <p>the name of the did</p> <p> </p> <code>key</code> <p>the key to be deleted</p> <p> </p> <code>session</code> <p>The database session in use.</p> <p> TYPE: <code>Session</code> </p>"},{"location":"json_meta.html#rucio.core.did_meta_plugins.json_meta.JSONDidMeta.get_plugin_name","title":"get_plugin_name","text":"<pre><code>get_plugin_name()\n</code></pre> <p>Returns a unique identifier for this plugin. This can be later used for filtering down results to this plugin only.</p> RETURNS DESCRIPTION <p>The name of the plugin.</p>"},{"location":"json_meta.html#rucio.core.did_meta_plugins.json_meta-functions","title":"Functions","text":""},{"location":"mongo_meta.html","title":"Mongo meta","text":""},{"location":"mongo_meta.html#rucio.core.did_meta_plugins.mongo_meta-classes","title":"Classes","text":""},{"location":"mongo_meta.html#rucio.core.did_meta_plugins.mongo_meta.MongoDidMeta","title":"MongoDidMeta","text":"<pre><code>MongoDidMeta(\n    host=None,\n    port=None,\n    db=None,\n    collection=None,\n    user=None,\n    password=None,\n)\n</code></pre>"},{"location":"mongo_meta.html#rucio.core.did_meta_plugins.mongo_meta.MongoDidMeta-functions","title":"Functions","text":""},{"location":"mongo_meta.html#rucio.core.did_meta_plugins.mongo_meta.MongoDidMeta.get_metadata","title":"get_metadata","text":"<pre><code>get_metadata(scope, name, *, session=None)\n</code></pre> <p>Get data identifier metadata.</p> PARAMETER DESCRIPTION <code>scope</code> <p>The scope name</p> <p> </p> <code>name</code> <p>The data identifier name</p> <p> </p> <code>session</code> <p>The database session in use</p> <p> TYPE: <code>Optional[Session]</code> DEFAULT: <code>None</code> </p> RETURNS DESCRIPTION <p>The metadata for the did</p>"},{"location":"mongo_meta.html#rucio.core.did_meta_plugins.mongo_meta.MongoDidMeta.set_metadata","title":"set_metadata","text":"<pre><code>set_metadata(\n    scope,\n    name,\n    key,\n    value,\n    recursive=False,\n    *,\n    session=None\n)\n</code></pre> <p>Set single metadata key.</p> PARAMETER DESCRIPTION <code>scope</code> <p>the scope of did</p> <p> </p> <code>name</code> <p>the name of the did</p> <p> </p> <code>key</code> <p>the key to be added</p> <p> </p> <code>value</code> <p>the value of the key to be added</p> <p> </p> <code>recursive</code> <p>recurse into DIDs (not supported)</p> <p> DEFAULT: <code>False</code> </p> <code>session</code> <p>The database session in use</p> <p> TYPE: <code>Optional[Session]</code> DEFAULT: <code>None</code> </p>"},{"location":"mongo_meta.html#rucio.core.did_meta_plugins.mongo_meta.MongoDidMeta.set_metadata_bulk","title":"set_metadata_bulk","text":"<pre><code>set_metadata_bulk(\n    scope, name, metadata, recursive=False, *, session=None\n)\n</code></pre> <p>Bulk set metadata keys.</p> PARAMETER DESCRIPTION <code>scope</code> <p>the scope of did</p> <p> </p> <code>name</code> <p>the name of the did</p> <p> </p> <code>metadata</code> <p>dictionary of metadata keypairs to be added</p> <p> </p> <code>recursive</code> <p>recurse into DIDs (not supported)</p> <p> DEFAULT: <code>False</code> </p> <code>session</code> <p>The database session in use</p> <p> TYPE: <code>Optional[Session]</code> DEFAULT: <code>None</code> </p>"},{"location":"mongo_meta.html#rucio.core.did_meta_plugins.mongo_meta.MongoDidMeta.delete_metadata","title":"delete_metadata","text":"<pre><code>delete_metadata(scope, name, key, *, session=None)\n</code></pre> <p>Delete a key from metadata.</p> PARAMETER DESCRIPTION <code>scope</code> <p>the scope of did</p> <p> </p> <code>name</code> <p>the name of the did</p> <p> </p> <code>key</code> <p>the key to be deleted</p> <p> </p>"},{"location":"mongo_meta.html#rucio.core.did_meta_plugins.mongo_meta.MongoDidMeta.get_plugin_name","title":"get_plugin_name","text":"<pre><code>get_plugin_name()\n</code></pre> <p>Returns a unique identifier for this plugin. This can be later used for filtering down results to this plugin only.</p> RETURNS DESCRIPTION <p>The name of the plugin</p>"},{"location":"postgres_meta.html","title":"Postgres meta","text":""},{"location":"postgres_meta.html#rucio.core.did_meta_plugins.postgres_meta-classes","title":"Classes","text":""},{"location":"postgres_meta.html#rucio.core.did_meta_plugins.postgres_meta.ExternalPostgresJSONDidMeta","title":"ExternalPostgresJSONDidMeta","text":"<pre><code>ExternalPostgresJSONDidMeta(\n    host=None,\n    port=None,\n    db=None,\n    user=None,\n    password=None,\n    db_schema=None,\n    table=None,\n    table_is_managed=None,\n    table_column_vo=None,\n    table_column_scope=None,\n    table_column_name=None,\n    table_column_data=None,\n)\n</code></pre>"},{"location":"postgres_meta.html#rucio.core.did_meta_plugins.postgres_meta.ExternalPostgresJSONDidMeta-functions","title":"Functions","text":""},{"location":"postgres_meta.html#rucio.core.did_meta_plugins.postgres_meta.ExternalPostgresJSONDidMeta._try_create_metadata_table","title":"_try_create_metadata_table","text":"<pre><code>_try_create_metadata_table()\n</code></pre> <p>Try to create a metadata table.</p>"},{"location":"postgres_meta.html#rucio.core.did_meta_plugins.postgres_meta.ExternalPostgresJSONDidMeta._verify_table_schema","title":"_verify_table_schema","text":"<pre><code>_verify_table_schema(\n    table_column_vo,\n    table_column_scope,\n    table_column_name,\n    table_column_data,\n)\n</code></pre> <p>Rudimentary verification that the metadata table schema meets the requirements for the plugin.</p> <p>Should be called when using externally managed database tables as a sanity check.</p> PARAMETER DESCRIPTION <code>table_column_vo</code> <p>The table column used for the vo</p> <p> </p> <code>table_column_scope</code> <p>The table column used for the scope</p> <p> </p> <code>table_column_name</code> <p>The table column used for the name</p> <p> </p> <code>table_column_data</code> <p>The table column used for the data</p> <p> </p>"},{"location":"postgres_meta.html#rucio.core.did_meta_plugins.postgres_meta.ExternalPostgresJSONDidMeta.get_metadata","title":"get_metadata","text":"<pre><code>get_metadata(scope, name, *, session=None)\n</code></pre> <p>Get data identifier metadata.</p> PARAMETER DESCRIPTION <code>scope</code> <p>The scope name</p> <p> </p> <code>name</code> <p>The data identifier name</p> <p> </p> <code>session</code> <p>The database session in use</p> <p> TYPE: <code>Optional[Session]</code> DEFAULT: <code>None</code> </p> RETURNS DESCRIPTION <p>the metadata for the did</p>"},{"location":"postgres_meta.html#rucio.core.did_meta_plugins.postgres_meta.ExternalPostgresJSONDidMeta.set_metadata","title":"set_metadata","text":"<pre><code>set_metadata(\n    scope,\n    name,\n    key,\n    value,\n    recursive=False,\n    *,\n    session=None\n)\n</code></pre> <p>Set single metadata key.</p> PARAMETER DESCRIPTION <code>scope</code> <p>the scope of did</p> <p> </p> <code>name</code> <p>the name of the did</p> <p> </p> <code>key</code> <p>the key to be added</p> <p> </p> <code>value</code> <p>the value of the key to be added</p> <p> </p> <code>recursive</code> <p>recurse into DIDs (not supported)</p> <p> DEFAULT: <code>False</code> </p> <code>session</code> <p>The database session in use</p> <p> TYPE: <code>Optional[Session]</code> DEFAULT: <code>None</code> </p>"},{"location":"postgres_meta.html#rucio.core.did_meta_plugins.postgres_meta.ExternalPostgresJSONDidMeta.set_metadata_bulk","title":"set_metadata_bulk","text":"<pre><code>set_metadata_bulk(\n    scope, name, metadata, recursive=False, *, session=None\n)\n</code></pre> <p>Bulk set metadata keys.</p> PARAMETER DESCRIPTION <code>scope</code> <p>the scope of did</p> <p> </p> <code>name</code> <p>the name of the did</p> <p> </p> <code>metadata</code> <p>dictionary of metadata keypairs to be added</p> <p> </p> <code>recursive</code> <p>recurse into DIDs (not supported)</p> <p> DEFAULT: <code>False</code> </p> <code>session</code> <p>The database session in use</p> <p> TYPE: <code>Optional[Session]</code> DEFAULT: <code>None</code> </p>"},{"location":"postgres_meta.html#rucio.core.did_meta_plugins.postgres_meta.ExternalPostgresJSONDidMeta.delete_metadata","title":"delete_metadata","text":"<pre><code>delete_metadata(scope, name, key, *, session=None)\n</code></pre> <p>Delete a key from metadata.</p> PARAMETER DESCRIPTION <code>scope</code> <p>the scope of did</p> <p> </p> <code>name</code> <p>the name of the did</p> <p> </p> <code>key</code> <p>the key to be deleted</p> <p> </p> <code>session</code> <p>the database session in use</p> <p> TYPE: <code>Optional[Session]</code> DEFAULT: <code>None</code> </p>"},{"location":"postgres_meta.html#rucio.core.did_meta_plugins.postgres_meta.ExternalPostgresJSONDidMeta.get_plugin_name","title":"get_plugin_name","text":"<pre><code>get_plugin_name()\n</code></pre> <p>Returns a unique identifier for this plugin. This can be later used for filtering down results to this plugin only.</p> RETURNS DESCRIPTION <p>The name of the plugin</p>"}]}