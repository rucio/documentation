{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"rsemanager.html","title":"Rsemanager","text":""},{"location":"rsemanager.html#rucio.rse.rsemanager-functions","title":"Functions","text":""},{"location":"rsemanager.html#rucio.rse.rsemanager.get_scope_protocol","title":"get_scope_protocol","text":"<pre><code>get_scope_protocol(vo='def')\n</code></pre> <pre><code>Returns the callable protocol to translate the pfn to a name/scope pair\n</code></pre> RETURNS DESCRIPTION <code>Callable</code> <p>Callable: Scope Parser function</p>"},{"location":"rsemanager.html#rucio.rse.rsemanager.get_rse_info","title":"get_rse_info","text":"<pre><code>get_rse_info(rse=None, vo='def', rse_id=None, session=None)\n</code></pre> <p>Returns all protocol related RSE attributes. Call with either rse and vo, or (in server mode) rse_id</p> PARAMETER DESCRIPTION <code>rse</code> <p>Name of the requested RSE</p> <p> DEFAULT: <code>None</code> </p> <code>vo</code> <p>The VO for the RSE.</p> <p> DEFAULT: <code>'def'</code> </p> <code>rse_id</code> <p>The id of the rse (use in server mode to avoid db calls)</p> <p> DEFAULT: <code>None</code> </p> <code>session</code> <p>The eventual database session.</p> <p> DEFAULT: <code>None</code> </p> RETURNS DESCRIPTION <code>RSESettingsDict</code> <p>a dict object with the following attributes: id                ...     an internal identifier rse               ...     the name of the RSE as string type              ...     the storage type odf the RSE e.g. DISK volatile          ...     boolean indicating if the RSE is volatile verify_checksum   ...     boolean indicating whether RSE supports requests for checksums deterministic      ...     boolean indicating of the naming of the files follows the defined determinism domain            ...     indicating the domain that should be assumed for transfers. Values are 'ALL', 'LAN', or 'WAN' protocols         ...     all supported protocol in form of a list of dict objects with the following structure - scheme              ...     protocol scheme e.g. http, srm, ... - hostname            ...     hostname of the site - prefix              ...     path to the folder where the files are stored - port                ...     port used for this protocol - impl                ...     naming the python class of the protocol implementation - extended_attributes ...     additional information for the protocol - domains             ...     a dict naming each domain and the priority of the protocol for each operation (lower is better, zero is not supported)</p> RAISES DESCRIPTION <code>RSENotFound</code> <p>if the provided RSE could not be found in the database.</p>"},{"location":"rsemanager.html#rucio.rse.rsemanager._get_possible_protocols","title":"_get_possible_protocols","text":"<pre><code>_get_possible_protocols(\n    rse_settings,\n    operation,\n    scheme=None,\n    domain=None,\n    impl=None,\n)\n</code></pre> <p>Filter the list of available protocols or provided by the supported ones.</p> PARAMETER DESCRIPTION <code>rse_settings</code> <p>The rse settings.</p> <p> TYPE: <code>RSESettingsDict</code> </p> <code>operation</code> <p>The operation (write, read).</p> <p> </p> <code>scheme</code> <p>Optional filter if no specific protocol is defined in rse_setting for the provided operation.</p> <p> DEFAULT: <code>None</code> </p> <code>domain</code> <p>Optional domain (lan/wan), if not specified, both will be returned</p> <p> DEFAULT: <code>None</code> </p> RETURNS DESCRIPTION <p>The list of possible protocols.</p>"},{"location":"rsemanager.html#rucio.rse.rsemanager.create_protocol","title":"create_protocol","text":"<pre><code>create_protocol(\n    rse_settings,\n    operation,\n    scheme=None,\n    domain=\"wan\",\n    auth_token=None,\n    protocol_attr=None,\n    logger=logging.log,\n    impl=None,\n)\n</code></pre> <p>Instantiates the protocol defined for the given operation.</p> PARAMETER DESCRIPTION <code>rse_settings</code> <p>RSE attributes</p> <p> TYPE: <code>RSESettingsDict</code> </p> <code>operation</code> <p>Intended operation for this protocol</p> <p> </p> <code>scheme</code> <p>Optional filter if no specific protocol is defined in rse_setting for the provided operation</p> <p> DEFAULT: <code>None</code> </p> <code>domain</code> <p>Optional specification of the domain</p> <p> DEFAULT: <code>'wan'</code> </p> <code>auth_token</code> <p>Optionally passing JSON Web Token (OIDC) string for authentication</p> <p> DEFAULT: <code>None</code> </p> <code>protocol_attr</code> <p>Optionally passing the full protocol availability information to correctly select WAN/LAN</p> <p> DEFAULT: <code>None</code> </p> <code>logger</code> <p>Optional decorated logger that can be passed from the calling daemons or servers.</p> <p> DEFAULT: <code>log</code> </p> RETURNS DESCRIPTION <p>An instance of the requested protocol</p>"},{"location":"rsemanager.html#rucio.rse.rsemanager.lfns2pfns","title":"lfns2pfns","text":"<pre><code>lfns2pfns(\n    rse_settings,\n    lfns,\n    operation=\"write\",\n    scheme=None,\n    domain=\"wan\",\n    auth_token=None,\n    logger=logging.log,\n    impl=None,\n)\n</code></pre> <p>Convert the lfn to a pfn</p> PARAMETER DESCRIPTION <code>rse_settings</code> <p>RSE attributes</p> <p> TYPE: <code>RSESettingsDict</code> </p> <code>lfns</code> <p>logical file names as a dict containing 'scope' and 'name' as keys. For bulk a list of dicts can be provided</p> <p> </p> <code>operation</code> <p>Intended operation for this protocol</p> <p> DEFAULT: <code>'write'</code> </p> <code>scheme</code> <p>Optional filter if no specific protocol is defined in rse_setting for the provided operation</p> <p> DEFAULT: <code>None</code> </p> <code>domain</code> <p>Optional specification of the domain</p> <p> DEFAULT: <code>'wan'</code> </p> <code>auth_token</code> <p>Optionally passing JSON Web Token (OIDC) string for authentication</p> <p> DEFAULT: <code>None</code> </p> <code>logger</code> <p>Optional decorated logger that can be passed from the calling daemons or servers.</p> <p> DEFAULT: <code>log</code> </p> RETURNS DESCRIPTION <p>a dict with scope:name as key and the PFN as value</p>"},{"location":"rsemanager.html#rucio.rse.rsemanager.parse_pfns","title":"parse_pfns","text":"<pre><code>parse_pfns(\n    rse_settings,\n    pfns,\n    operation=\"read\",\n    domain=\"wan\",\n    auth_token=None,\n)\n</code></pre> <p>Checks if a PFN is feasible for a given RSE. If so it splits the pfn in its various components.</p> PARAMETER DESCRIPTION <code>rse_settings</code> <p>RSE attributes</p> <p> TYPE: <code>RSESettingsDict</code> </p> <code>pfns</code> <p>list of PFNs</p> <p> </p> <code>operation</code> <p>Intended operation for this protocol</p> <p> DEFAULT: <code>'read'</code> </p> <code>domain</code> <p>Optional specification of the domain</p> <p> DEFAULT: <code>'wan'</code> </p> <code>auth_token</code> <p>Optionally passing JSON Web Token (OIDC) string for authentication</p> <p> DEFAULT: <code>None</code> </p> RETURNS DESCRIPTION <p>A dict with the parts known by the selected protocol e.g. scheme, hostname, prefix, path, name</p> RAISES DESCRIPTION <code>RSEFileNameNotSupported</code> <p>if provided PFN is not supported by the RSE/protocol</p> <code>RSENotFound</code> <p>if the referred storage is not found i the repository (rse_id)</p> <code>InvalidObject</code> <p>If the properties parameter doesn't include scheme, hostname, and port as keys</p> <code>RSEOperationNotSupported</code> <p>If no matching protocol was found for the requested operation</p>"},{"location":"rsemanager.html#rucio.rse.rsemanager.exists","title":"exists","text":"<pre><code>exists(\n    rse_settings,\n    files,\n    domain=\"wan\",\n    scheme=None,\n    impl=None,\n    auth_token=None,\n    vo=\"def\",\n    logger=logging.log,\n)\n</code></pre> <p>Checks if a file is present at the connected storage. Providing a list indicates the bulk mode.</p> PARAMETER DESCRIPTION <code>rse_settings</code> <p>RSE attributes</p> <p> TYPE: <code>RSESettingsDict</code> </p> <code>files</code> <p>a single dict or a list with dicts containing 'scope' and 'name' if LFNs are used and only 'name' if PFNs are used. E.g. {'name': '2_rse_remote_get.raw', 'scope': 'user.jdoe'}, {'name': 'user/jdoe/5a/98/3_rse_remote_get.raw'}</p> <p> </p> <code>domain</code> <p>The network domain, either 'wan' (default) or 'lan'</p> <p> DEFAULT: <code>'wan'</code> </p> <code>auth_token</code> <p>Optionally passing JSON Web Token (OIDC) string for authentication</p> <p> DEFAULT: <code>None</code> </p> <code>vo</code> <p>The VO for the RSE</p> <p> DEFAULT: <code>'def'</code> </p> <code>logger</code> <p>Optional decorated logger that can be passed from the calling daemons or servers.</p> <p> DEFAULT: <code>log</code> </p> RETURNS DESCRIPTION <p>True/False for a single file or a dict object with 'scope:name' for LFNs or 'name' for PFNs as keys and True or the exception as value for each file in bulk mode</p> RAISES DESCRIPTION <code>RSENotConnected</code> <p>no connection to a specific storage has been established</p>"},{"location":"rsemanager.html#rucio.rse.rsemanager.upload","title":"upload","text":"<pre><code>upload(\n    rse_settings,\n    lfns,\n    domain=\"wan\",\n    source_dir=None,\n    force_pfn=None,\n    force_scheme=None,\n    transfer_timeout=None,\n    delete_existing=False,\n    sign_service=None,\n    auth_token=None,\n    vo=\"def\",\n    logger=logging.log,\n    impl=None,\n)\n</code></pre> <p>Uploads a file to the connected storage. Providing a list indicates the bulk mode.</p> PARAMETER DESCRIPTION <code>rse_settings</code> <p>RSE attributes</p> <p> TYPE: <code>RSESettingsDict</code> </p> <code>lfns</code> <p>a single dict or a list with dicts containing 'scope' and 'name'. Examples: [ {'name': '1_rse_local_put.raw', 'scope': 'user.jdoe', 'filesize': 42, 'adler32': '87HS3J968JSNWID'}, {'name': '2_rse_local_put.raw', 'scope': 'user.jdoe', 'filesize': 4711, 'adler32': 'RSSMICETHMISBA837464F'} ] If the 'filename' key is present, it will be used by Rucio as the actual name of the file on disk (separate from the Rucio 'name').</p> <p> </p> <code>domain</code> <p>The network domain, either 'wan' (default) or 'lan'</p> <p> DEFAULT: <code>'wan'</code> </p> <code>source_dir</code> <p>path to the local directory including the source files</p> <p> DEFAULT: <code>None</code> </p> <code>force_pfn</code> <p>use the given PFN -- can lead to dark data, use sparingly</p> <p> DEFAULT: <code>None</code> </p> <code>force_scheme</code> <p>use the given protocol scheme, overriding the protocol priority in the RSE description</p> <p> DEFAULT: <code>None</code> </p> <code>transfer_timeout</code> <p>set this timeout (in seconds) for the transfers, for protocols that support it</p> <p> DEFAULT: <code>None</code> </p> <code>sign_service</code> <p>use the given service (e.g. gcs, s3, swift) to sign the URL</p> <p> DEFAULT: <code>None</code> </p> <code>auth_token</code> <p>Optionally passing JSON Web Token (OIDC) string for authentication</p> <p> DEFAULT: <code>None</code> </p> <code>vo</code> <p>The VO for the RSE</p> <p> DEFAULT: <code>'def'</code> </p> <code>logger</code> <p>Optional decorated logger that can be passed from the calling daemons or servers.</p> <p> DEFAULT: <code>log</code> </p> RETURNS DESCRIPTION <p>True/False for a single file or a dict object with 'scope:name' as keys and True or the exception as value for each file in bulk mode</p> RAISES DESCRIPTION <code>RSENotConnected</code> <p>no connection to a specific storage has been established</p> <code>SourceNotFound</code> <p>local source file can not be found</p> <code>DestinationNotAccessible</code> <p>remote destination directory is not accessible</p> <code>ServiceUnavailable</code> <p>for any other reason</p>"},{"location":"rsemanager.html#rucio.rse.rsemanager.delete","title":"delete","text":"<pre><code>delete(\n    rse_settings,\n    lfns,\n    domain=\"wan\",\n    auth_token=None,\n    logger=logging.log,\n    impl=None,\n)\n</code></pre> <p>Delete a file from the connected storage. Providing a list indicates the bulk mode.</p> PARAMETER DESCRIPTION <code>rse_settings</code> <p>RSE attributes</p> <p> TYPE: <code>RSESettingsDict</code> </p> <code>lfns</code> <p>a single dict or a list with dicts containing 'scope' and 'name'. E.g. [{'name': '1_rse_remote_delete.raw', 'scope': 'user.jdoe'}, {'name': '2_rse_remote_delete.raw', 'scope': 'user.jdoe'}]</p> <p> </p> <code>domain</code> <p>The network domain, either 'wan' (default) or 'lan'</p> <p> DEFAULT: <code>'wan'</code> </p> <code>auth_token</code> <p>Optionally passing JSON Web Token (OIDC) string for authentication</p> <p> DEFAULT: <code>None</code> </p> <code>logger</code> <p>Optional decorated logger that can be passed from the calling daemons or servers.</p> <p> DEFAULT: <code>log</code> </p> RETURNS DESCRIPTION <p>True/False for a single file or a dict object with 'scope:name' as keys and True or the exception as value for each file in bulk mode</p> RAISES DESCRIPTION <code>RSENotConnected</code> <p>no connection to a specific storage has been established</p> <code>SourceNotFound</code> <p>remote source file can not be found on storage</p> <code>ServiceUnavailable</code> <p>for any other reason</p>"},{"location":"rsemanager.html#rucio.rse.rsemanager.rename","title":"rename","text":"<pre><code>rename(\n    rse_settings,\n    files,\n    domain=\"wan\",\n    auth_token=None,\n    logger=logging.log,\n    impl=None,\n)\n</code></pre> <p>Rename files stored on the connected storage. Providing a list indicates the bulk mode.</p> PARAMETER DESCRIPTION <code>rse_settings</code> <p>RSE attributes</p> <p> TYPE: <code>RSESettingsDict</code> </p> <code>files</code> <p>a single dict or a list with dicts containing 'scope', 'name', 'new_scope' and 'new_name' if LFNs are used or only 'name' and 'new_name' if PFNs are used. If 'new_scope' or 'new_name' are not provided, the current one is used. Examples: [ {'name': '3_rse_remote_rename.raw', 'scope': 'user.jdoe', 'new_name': '3_rse_new.raw', 'new_scope': 'user.jdoe'}, {'name': 'user/jdoe/d9/cb/9_rse_remote_rename.raw', 'new_name': 'user/jdoe/c6/4a/9_rse_new.raw'} ]</p> <p> </p> <code>domain</code> <p>The network domain, either 'wan' (default) or 'lan'</p> <p> DEFAULT: <code>'wan'</code> </p> <code>auth_token</code> <p>Optionally passing JSON Web Token (OIDC) string for authentication</p> <p> DEFAULT: <code>None</code> </p> <code>logger</code> <p>Optional decorated logger that can be passed from the calling daemons or servers.</p> <p> DEFAULT: <code>log</code> </p> RETURNS DESCRIPTION <p>True/False for a single file or a dict object with LFN (key) and True/False (value) in bulk mode</p> RAISES DESCRIPTION <code>RSENotConnected</code> <p>no connection to a specific storage has been established</p> <code>SourceNotFound</code> <p>remote source file can not be found on storage</p> <code>DestinationNotAccessible</code> <p>remote destination directory is not accessible</p> <code>ServiceUnavailable</code> <p>for any other reason</p>"},{"location":"rsemanager.html#rucio.rse.rsemanager.get_space_usage","title":"get_space_usage","text":"<pre><code>get_space_usage(\n    rse_settings,\n    scheme=None,\n    domain=\"wan\",\n    auth_token=None,\n    logger=logging.log,\n    impl=None,\n)\n</code></pre> <p>Get RSE space usage information.</p> PARAMETER DESCRIPTION <code>rse_settings</code> <p>RSE attributes</p> <p> TYPE: <code>RSESettingsDict</code> </p> <code>scheme</code> <p>optional filter to select which protocol to be used.</p> <p> DEFAULT: <code>None</code> </p> <code>domain</code> <p>The network domain, either 'wan' (default) or 'lan'</p> <p> DEFAULT: <code>'wan'</code> </p> <code>auth_token</code> <p>Optionally passing JSON Web Token (OIDC) string for authentication</p> <p> DEFAULT: <code>None</code> </p> <code>logger</code> <p>Optional decorated logger that can be passed from the calling daemons or servers.</p> <p> DEFAULT: <code>log</code> </p> RETURNS DESCRIPTION <p>a list with dict containing 'totalsize' and 'unusedsize'</p> RAISES DESCRIPTION <code>ServiceUnavailable</code> <p>if some generic error occurred in the library.</p>"},{"location":"rsemanager.html#rucio.rse.rsemanager.find_matching_scheme","title":"find_matching_scheme","text":"<pre><code>find_matching_scheme(\n    rse_settings_dest,\n    rse_settings_src,\n    operation_src,\n    operation_dest,\n    domain=\"wan\",\n    scheme=None,\n)\n</code></pre> <p>Find the best matching scheme between two RSEs</p> PARAMETER DESCRIPTION <code>rse_settings_dest</code> <p>RSE settings for the destination RSE.</p> <p> </p> <code>rse_settings_src</code> <p>RSE settings for the src RSE.</p> <p> </p> <code>operation_src</code> <p>Source Operation such as read, write.</p> <p> </p> <code>operation_dest</code> <p>Dest Operation such as read, write.</p> <p> </p> <code>domain</code> <p>Domain such as lan, wan.</p> <p> DEFAULT: <code>'wan'</code> </p> <code>scheme</code> <p>List of supported schemes.</p> <p> DEFAULT: <code>None</code> </p> RETURNS DESCRIPTION <p>Tuple of matching schemes (dest_scheme, src_scheme, dest_scheme_priority, src_scheme_priority).</p>"},{"location":"rsemanager.html#rucio.rse.rsemanager._retry_protocol_stat","title":"_retry_protocol_stat","text":"<pre><code>_retry_protocol_stat(protocol, pfn)\n</code></pre> <p>try to stat file, on fail try again 1s, 2s, 4s, 8s, 16s, 32s later. Fail is all fail</p> PARAMETER DESCRIPTION <code>protocol</code> <p>The protocol to use to reach this file</p> <p> </p> <code>pfn</code> <p>Physical file name of the target for the protocol stat</p> <p> </p>"},{"location":"rsemanager.html#rucio.rse.rsemanager.__check_compatible_scheme","title":"__check_compatible_scheme","text":"<pre><code>__check_compatible_scheme(dest_scheme, src_scheme)\n</code></pre> <p>Check if two schemes are compatible, such as srm and gsiftp</p> PARAMETER DESCRIPTION <code>dest_scheme</code> <p>Destination scheme</p> <p> </p> <code>src_scheme</code> <p>Source scheme</p> <p> </p> <code>scheme</code> <p>List of supported schemes</p> <p> </p> RETURNS DESCRIPTION <p>True if schemes are compatible, False otherwise.</p>"},{"location":"translation.html","title":"Translation","text":""},{"location":"translation.html#rucio.rse.translation-classes","title":"Classes","text":""},{"location":"translation.html#rucio.rse.translation.RSEDeterministicScopeTranslation","title":"RSEDeterministicScopeTranslation","text":"<pre><code>RSEDeterministicScopeTranslation(vo='def')\n</code></pre> <p>Translates a pfn dictionary into a scope and name</p>"},{"location":"translation.html#rucio.rse.translation.RSEDeterministicScopeTranslation-functions","title":"Functions","text":""},{"location":"translation.html#rucio.rse.translation.RSEDeterministicScopeTranslation._module_init_","title":"_module_init_  <code>classmethod</code>","text":"<pre><code>_module_init_()\n</code></pre> <p>Registers the included scope extraction algorithms</p>"},{"location":"translation.html#rucio.rse.translation.RSEDeterministicScopeTranslation.register","title":"register  <code>classmethod</code>","text":"<pre><code>register(pfn2lfn_callable, name=None)\n</code></pre> <p>Provided a callable function, register it as one of the valid PFN2LFN algorithms.</p> PARAMETER DESCRIPTION <code>pfn2lfn_callable</code> <p>Callable function to use.</p> <p> TYPE: <code>Callable</code> </p> <code>name</code> <p>Algorithm name used for registration.</p> <p> TYPE: <code>Optional[str]</code> DEFAULT: <code>None</code> </p>"},{"location":"translation.html#rucio.rse.translation.RSEDeterministicScopeTranslation._default","title":"_default  <code>staticmethod</code>","text":"<pre><code>_default(parsed_pfn)\n</code></pre> <p>Translate pfn to name/scope pair</p> PARAMETER DESCRIPTION <code>parsed_pfn</code> <p>dictionary representing pfn containing: - path: str, - name: str</p> <p> TYPE: <code>Mapping[str, str]</code> </p> RETURNS DESCRIPTION <code>tuple[str, str]</code> <p>tuple containing name, scope</p>"},{"location":"translation.html#rucio.rse.translation.RSEDeterministicTranslation","title":"RSEDeterministicTranslation","text":"<pre><code>RSEDeterministicTranslation(\n    rse=None, rse_attributes=None, protocol_attributes=None\n)\n</code></pre> <p>Execute the logic for translating a LFN to a path.</p> <p>Initialize a translator object from the RSE, its attributes, and the protocol-specific attributes.</p> PARAMETER DESCRIPTION <code>rse</code> <p>Name of RSE for this translation.</p> <p> DEFAULT: <code>None</code> </p> <code>rse_attributes</code> <p>A dictionary of RSE-specific attributes for use in the translation.</p> <p> DEFAULT: <code>None</code> </p> <code>protocol_attributes</code> <p>A dictionary of RSE/protocol-specific attributes.</p> <p> DEFAULT: <code>None</code> </p>"},{"location":"translation.html#rucio.rse.translation.RSEDeterministicTranslation-functions","title":"Functions","text":""},{"location":"translation.html#rucio.rse.translation.RSEDeterministicTranslation.supports","title":"supports  <code>classmethod</code>","text":"<pre><code>supports(name)\n</code></pre> <p>Check to see if a specific algorithm is supported.</p> PARAMETER DESCRIPTION <code>name</code> <p>Name of the deterministic algorithm.</p> <p> </p> RETURNS DESCRIPTION <p>True if <code>name</code> is an algorithm supported by the translator class, False otherwise</p>"},{"location":"translation.html#rucio.rse.translation.RSEDeterministicTranslation.register","title":"register  <code>classmethod</code>","text":"<pre><code>register(lfn2pfn_callable, name=None)\n</code></pre> <p>Provided a callable function, register it as one of the valid LFN2PFN algorithms.</p> <p>The callable will receive five arguments:  - scope: Scope of the LFN.  - name: LFN's path name  - rse: RSE name the translation is being done for.  - rse_attributes: Attributes of the RSE.  - protocol_attributes: Attributes of the RSE's protocol The return value should be the last part of the PFN - it will be appended to the rest of the URL.</p> PARAMETER DESCRIPTION <code>lfn2pfn_callable</code> <p>Callable function to use for generating paths.</p> <p> </p> <code>name</code> <p>Algorithm name used for registration.  If None, then <code>lfn2pfn_callable.__name__</code> is used.</p> <p> DEFAULT: <code>None</code> </p>"},{"location":"translation.html#rucio.rse.translation.RSEDeterministicTranslation.__hash","title":"__hash  <code>staticmethod</code>","text":"<pre><code>__hash(scope, name, rse, rse_attrs, protocol_attrs)\n</code></pre> <p>Given a LFN, turn it into a sub-directory structure using a hash function.</p> <p>This takes the MD5 of the LFN and uses the first four characters as a subdirectory name.</p> PARAMETER DESCRIPTION <code>scope</code> <p>Scope of the LFN.</p> <p> </p> <code>name</code> <p>File name of the LFN.</p> <p> </p> <code>rse</code> <p>RSE for PFN (ignored)</p> <p> </p> <code>rse_attrs</code> <p>RSE attributes for PFN (ignored)</p> <p> </p> <code>protocol_attrs</code> <p>RSE protocol attributes for PFN (ignored)</p> <p> </p> RETURNS DESCRIPTION <p>Path for use in the PFN generation.</p>"},{"location":"translation.html#rucio.rse.translation.RSEDeterministicTranslation.__identity","title":"__identity  <code>staticmethod</code>","text":"<pre><code>__identity(scope, name, rse, rse_attrs, protocol_attrs)\n</code></pre> <p>Given a LFN, convert it directly to a path using the mapping:</p> <pre><code>scope:path -&gt; scope/path\n</code></pre> PARAMETER DESCRIPTION <code>scope</code> <p>Scope of the LFN.</p> <p> </p> <code>name</code> <p>File name of the LFN.</p> <p> </p> <code>rse</code> <p>RSE for PFN (ignored)</p> <p> </p> <code>rse_attrs</code> <p>RSE attributes for PFN (ignored)</p> <p> </p> <code>protocol_attrs</code> <p>RSE protocol attributes for PFN (ignored)</p> <p> </p> RETURNS DESCRIPTION <p>Path for use in the PFN generation.</p>"},{"location":"translation.html#rucio.rse.translation.RSEDeterministicTranslation._module_init_","title":"_module_init_  <code>classmethod</code>","text":"<pre><code>_module_init_()\n</code></pre> <p>Initialize the class object on first module load.</p>"},{"location":"translation.html#rucio.rse.translation.RSEDeterministicTranslation.path","title":"path","text":"<pre><code>path(scope, name)\n</code></pre> <p>Transforms the logical file name into a PFN's path.</p> PARAMETER DESCRIPTION <code>lfn</code> <p>filename</p> <p> </p> <code>scope</code> <p>scope</p> <p> </p> RETURNS DESCRIPTION <p>RSE specific URI of the physical file</p>"}]}