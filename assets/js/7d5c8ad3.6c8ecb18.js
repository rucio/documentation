"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[69828],{77459:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>c,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"bin/rucio-conveyor-poller","title":"rucio-conveyor-poller","description":"","source":"@site/../docs/bin/rucio-conveyor-poller.md","sourceDirName":"bin","slug":"/bin/rucio-conveyor-poller","permalink":"/documentation/bin/rucio-conveyor-poller","draft":false,"unlisted":false,"editUrl":"https://github.com/rucio/documentation/tree/main/docs/../docs/bin/rucio-conveyor-poller.md","tags":[],"version":"current","frontMatter":{"title":"rucio-conveyor-poller"},"sidebar":"docs","previous":{"title":"rucio-conveyor-finisher","permalink":"/documentation/bin/rucio-conveyor-finisher"},"next":{"title":"rucio-conveyor-preparer","permalink":"/documentation/bin/rucio-conveyor-preparer"}}');var r=o(74848),i=o(28453);const c={title:"rucio-conveyor-poller"},s=void 0,l={},a=[];function u(e){const n={code:"code",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'usage: rucio-conveyor-poller [-h] [--run-once] [--fts-bulk FTS_BULK]\n                             [--db-bulk DB_BULK] [--older-than OLDER_THAN]\n                             [--sleep-time SLEEP_TIME]\n                             [--activities ACTIVITIES [ACTIVITIES ...]]\n                             [--activity-shares ACTIVITY_SHARES]\n                             [--total-threads TOTAL_THREADS]\n\nConveyor is a daemon to manage file transfers. The conveyor-poller is in\ncharge of poll the transfer tool to check if the submitted transfers are\nalready done.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --run-once            One iteration only\n  --fts-bulk FTS_BULK   Bulk control: number of transfers per FTS query\n  --db-bulk DB_BULK     Bulk control: number of transfers per db query\n  --older-than OLDER_THAN\n                        Poll control: older request more than this value to\n                        poll\n  --sleep-time SLEEP_TIME\n                        Seconds to sleep if few requests\n  --activities ACTIVITIES [ACTIVITIES ...]\n                        Explicit list of activities to include\n  --activity-shares ACTIVITY_SHARES\n                        JSON-encoded string of an activity shares dictionary\n                        {"act_1": 0.2, "act_2": 0.4, ...}\n  --total-threads TOTAL_THREADS\n                        Concurrency control: total number of threads for this\n                        process\n'})})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>c,x:()=>s});var t=o(96540);const r={},i=t.createContext(r);function c(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);