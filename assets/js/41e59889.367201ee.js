"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9398],{46469:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>c,default:()=>l,frontMatter:()=>i,metadata:()=>s,toc:()=>a});var o=t(74848),r=t(28453);const i={title:"rucio-reaper"},c=void 0,s={id:"bin/rucio-reaper",title:"rucio-reaper",description:"",source:"@site/../docs/bin/rucio-reaper.md",sourceDirName:"bin",slug:"/bin/rucio-reaper",permalink:"/documentation/bin/rucio-reaper",draft:!1,unlisted:!1,editUrl:"https://github.com/rucio/documentation/tree/main/docs/../docs/bin/rucio-reaper.md",tags:[],version:"current",frontMatter:{title:"rucio-reaper"},sidebar:"docs",previous:{title:"rucio-oauth-manager",permalink:"/documentation/bin/rucio-oauth-manager"},next:{title:"rucio-replica-recoverer",permalink:"/documentation/bin/rucio-replica-recoverer"}},u={},a=[];function d(e){const n={code:"code",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"usage: rucio-reaper [-h] [--run-once] [--threads THREADS]\n                    [--chunk_size CHUNK_SIZE] [--sleep-time SLEEP_TIME]\n                    [--greedy] [--exclude-rses EXCLUDE_RSES]\n                    [--include-rses INCLUDE_RSES] [--rses RSES [RSES ...]]\n                    [--vos VOS [VOS ...]] [--delay-seconds DELAY_SECONDS]\n                    [--scheme SCHEME]\n                    [--auto_exclude_threshold AUTO_EXCLUDE_THRESHOLD]\n                    [--auto_exclude_timeout AUTO_EXCLUDE_TIMEOUT]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --run-once            Runs one loop iteration\n  --threads THREADS     Concurrency control: number of threads\n  --chunk_size CHUNK_SIZE, --chunk-size CHUNK_SIZE\n                        The size used for a bulk deletion on on RSE\n  --sleep-time SLEEP_TIME\n                        Minimum time between 2 consecutive cycles\n  --greedy              To enable greedy mode. Deprecated, kept for\n                        compatibility reasons. Recommended way is to use RSE\n                        attribute greedyDeletion=True\n  --exclude-rses EXCLUDE_RSES\n                        RSE expression to exclude\n  --include-rses INCLUDE_RSES\n                        RSE expression to include\n  --rses RSES [RSES ...]\n                        Explicit list of RSEs to include. If empty, it\n                        considers all RSEs\n  --vos VOS [VOS ...]   Optional list of VOs to consider. Only used in multi-\n                        VO mode.\n  --delay-seconds DELAY_SECONDS\n                        The delay (seconds) to query replicas in BEING_DELETED\n                        state.\n  --scheme SCHEME       Force the reaper to use a particular protocol/scheme,\n                        e.g., mock\n  --auto_exclude_threshold AUTO_EXCLUDE_THRESHOLD, --auto-exclude-threshhold AUTO_EXCLUDE_THRESHOLD\n                        Number of service unavailable exceptions after which\n                        the RSE gets temporarily excluded.\n  --auto_exclude_timeout AUTO_EXCLUDE_TIMEOUT, --auto-exclude-timeout AUTO_EXCLUDE_TIMEOUT\n                        Timeout for temporarily excluded RSEs.\n"})})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>s});var o=t(96540);const r={},i=o.createContext(r);function c(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);