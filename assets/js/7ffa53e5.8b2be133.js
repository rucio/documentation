"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3549],{35244:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>s,contentTitle:()=>t,default:()=>h,frontMatter:()=>d,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"client_api/downloadclient","title":"DownloadClient","description":"\\\\\\\\init\\\\\\\\","source":"@site/../docs/client_api/downloadclient.md","sourceDirName":"client_api","slug":"/client_api/downloadclient","permalink":"/documentation/client_api/downloadclient","draft":false,"unlisted":false,"editUrl":"https://github.com/rucio/documentation/tree/main/docs/../docs/client_api/downloadclient.md","tags":[],"version":"current","frontMatter":{"title":"DownloadClient"},"sidebar":"docs","previous":{"title":"DiracClient","permalink":"/documentation/client_api/diracclient"},"next":{"title":"ExportClient","permalink":"/documentation/client_api/exportclient"}}');var r=n(74848),l=n(28453);const d={title:"DownloadClient"},t=void 0,s={},c=[{value:"__init__",id:"__init__",level:2},{value:"download_pfns",id:"download_pfns",level:2},{value:"download_dids",id:"download_dids",level:2},{value:"download_from_metalink_file",id:"download_from_metalink_file",level:2},{value:"download_aria2c",id:"download_aria2c",level:2},{value:"preferred_impl",id:"preferred_impl",level:2}];function a(e){const o={code:"code",h2:"h2",p:"p",strong:"strong",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(o.h2,{id:"__init__",children:"__init__"}),"\n",(0,r.jsxs)("span",{style:{"white-space":"pre"},children:[(0,r.jsx)(o.p,{children:"Initialises the basic settings for an DownloadClient object"}),(0,r.jsx)("table",{style:{border:"none"},children:(0,r.jsx)("tbody",{children:(0,r.jsxs)("tr",{style:{border:"none"},children:[(0,r.jsx)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"},children:(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.strong,{children:"Arguments"}),":"]})}),(0,r.jsxs)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"},children:[(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"client"}),": Optional: rucio.client.client.Client object. If None, a new object will be created."]}),(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"external_traces"}),": Optional: reference to a list where traces can be added"]}),(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"logger"}),": Optional: logging.Logger object. If None, default logger will be used."]})]})]})})})]}),"\n",(0,r.jsx)(o.h2,{id:"download_pfns",children:"download_pfns"}),"\n",(0,r.jsxs)("span",{style:{"white-space":"pre"},children:[(0,r.jsx)(o.p,{children:"Download items with a given PFN. This function can only download files, no datasets."}),(0,r.jsx)("table",{style:{border:"none"},children:(0,r.jsxs)("tbody",{children:[(0,r.jsxs)("tr",{style:{border:"none"},children:[(0,r.jsx)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"},children:(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.strong,{children:"Arguments"}),":"]})}),(0,r.jsxs)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"},children:[(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"items"}),": List of dictionaries. Each dictionary describing a file to download. Keys:\npfn                            - PFN string of this file\ndid                            - DID string of this file (e.g. 'scope",":file",".name'). Wildcards are not allowed\nrse                            - rse name (e.g. 'CERN-PROD_DATADISK'). RSE Expressions are not allowed\nbase_dir                       - Optional: Base directory where the downloaded files will be stored. (Default: '.')\nno_subdir                      - Optional: If true, files are written directly into base_dir. (Default: False)\nadler32                        - Optional: The adler32 checmsum to compare the downloaded files adler32 checksum with\nmd5                            - Optional: The md5 checksum to compare the downloaded files md5 checksum with\ntransfer_timeout               - Optional: Timeout time for the download protocols. (Default: None)\ncheck_local_with_filesize_only - Optional: If true, already downloaded files will not be validated by checksum."]}),(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"num_threads"}),": Suggestion of number of threads to use for the download. It will be lowered if it's too high."]}),(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"trace_custom_fields"}),": Custom key value pairs to send with the traces"]}),(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"traces_copy_out"}),": reference to an external list, where the traces should be uploaded"]}),(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"deactivate_file_download_exceptions"}),": Boolean, if file download exceptions shouldn't be raised"]})]})]}),(0,r.jsxs)("tr",{style:{border:"none"},children:[(0,r.jsx)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"},children:(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.strong,{children:"Raises"}),":"]})}),(0,r.jsxs)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"},children:[(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"InputValidationError"}),": if one of the input items is in the wrong format"]}),(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"NoFilesDownloaded"}),": if no files could be downloaded"]}),(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"NotAllFilesDownloaded"}),": if not all files could be downloaded"]}),(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"RucioException"}),": if something unexpected went wrong during the download"]})]})]}),(0,r.jsxs)("tr",{style:{border:"none"},children:[(0,r.jsx)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"},children:(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.strong,{children:"Returns"}),":"]})}),(0,r.jsx)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"},children:(0,r.jsx)(o.p,{children:"a list of dictionaries with an entry for each file, containing the input options, the did, and the clientState\nclientState can be one of the following: ALREADY_DONE, DONE, FILE_NOT_FOUND, FAIL_VALIDATE, FAILED"})})]})]})})]}),"\n",(0,r.jsx)(o.h2,{id:"download_dids",children:"download_dids"}),"\n",(0,r.jsxs)("span",{style:{"white-space":"pre"},children:[(0,r.jsx)(o.p,{children:"Download items with given DIDs. This function can also download datasets and wildcarded DIDs."}),(0,r.jsx)("table",{style:{border:"none"},children:(0,r.jsxs)("tbody",{children:[(0,r.jsxs)("tr",{style:{border:"none"},children:[(0,r.jsx)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"},children:(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.strong,{children:"Arguments"}),":"]})}),(0,r.jsxs)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"},children:[(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"items"}),": List of dictionaries. Each dictionary describing an item to download. Keys:\ndid                            - DID string of this file (e.g. 'scope",":file",".name')\nfilters                        - Filter to select DIDs for download. Optional if DID is given\nrse                            - Optional: rse name (e.g. 'CERN-PROD_DATADISK') or rse expression from where to download\nimpl                           - Optional: name of the protocol implementation to be used to download this item.\nno_resolve_archives            - Optional: bool indicating whether archives should not be considered for download (Default: False)\nresolve_archives               - Deprecated: Use no_resolve_archives instead\nforce_scheme                   - Optional: force a specific scheme to download this item. (Default: None)\nbase_dir                       - Optional: base directory where the downloaded files will be stored. (Default: '.')\nno_subdir                      - Optional: If true, files are written directly into base_dir. (Default: False)\nnrandom                        - Optional: if the DID addresses a dataset, nrandom files will be randomly chosen for download from the dataset\nignore_checksum                - Optional: If true, skips the checksum validation between the downloaded file and the rucio catalouge. (Default: False)\ntransfer_timeout               - Optional: Timeout time for the download protocols. (Default: None)\ntransfer_speed_timeout         - Optional: Minimum allowed transfer speed (in KBps). Ignored if transfer_timeout set. Otherwise, used to compute default timeout (Default: 500)\ncheck_local_with_filesize_only - Optional: If true, already downloaded files will not be validated by checksum."]}),(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"num_threads"}),": Suggestion of number of threads to use for the download. It will be lowered if it's too high."]}),(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"trace_custom_fields"}),": Custom key value pairs to send with the traces."]}),(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"traces_copy_out"}),": reference to an external list, where the traces should be uploaded"]}),(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"deactivate_file_download_exceptions"}),": Boolean, if file download exceptions shouldn't be raised"]}),(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"sort"}),": Select best replica by replica sorting algorithm. Available algorithms:\n",(0,r.jsx)(o.code,{children:"geoip"}),"       - based on src/dst IP topographical distance\n",(0,r.jsx)(o.code,{children:"closeness"}),"   - based on src/dst closeness\n",(0,r.jsx)(o.code,{children:"dynamic"}),"     - Rucio Dynamic Smart Sort (tm)"]})]})]}),(0,r.jsxs)("tr",{style:{border:"none"},children:[(0,r.jsx)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"},children:(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.strong,{children:"Raises"}),":"]})}),(0,r.jsxs)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"},children:[(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"InputValidationError"}),": if one of the input items is in the wrong format"]}),(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"NoFilesDownloaded"}),": if no files could be downloaded"]}),(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"NotAllFilesDownloaded"}),": if not all files could be downloaded"]}),(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"RucioException"}),": if something unexpected went wrong during the download"]})]})]}),(0,r.jsxs)("tr",{style:{border:"none"},children:[(0,r.jsx)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"},children:(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.strong,{children:"Returns"}),":"]})}),(0,r.jsx)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"},children:(0,r.jsx)(o.p,{children:"a list of dictionaries with an entry for each file, containing the input options, the did, and the clientState"})})]})]})})]}),"\n",(0,r.jsx)(o.h2,{id:"download_from_metalink_file",children:"download_from_metalink_file"}),"\n",(0,r.jsxs)("span",{style:{"white-space":"pre"},children:[(0,r.jsx)(o.p,{children:"Download items using a given metalink file."}),(0,r.jsx)("table",{style:{border:"none"},children:(0,r.jsxs)("tbody",{children:[(0,r.jsxs)("tr",{style:{border:"none"},children:[(0,r.jsx)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"},children:(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.strong,{children:"Arguments"}),":"]})}),(0,r.jsxs)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"},children:[(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"item"}),": dictionary describing an item to download. Keys:\nbase_dir                       - Optional: base directory where the downloaded files will be stored. (Default: '.')\nno_subdir                      - Optional: If true, files are written directly into base_dir. (Default: False)\nignore_checksum                - Optional: If true, skips the checksum validation between the downloaded file and the rucio catalouge. (Default: False)\ntransfer_timeout               - Optional: Timeout time for the download protocols. (Default: None)\ncheck_local_with_filesize_only - Optional: If true, already downloaded files will not be validated by checksum."]}),(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"num_threads"}),": Suggestion of number of threads to use for the download. It will be lowered if it's too high."]}),(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"trace_custom_fields"}),": Custom key value pairs to send with the traces."]}),(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"traces_copy_out"}),": reference to an external list, where the traces should be uploaded"]}),(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"deactivate_file_download_exceptions"}),": Boolean, if file download exceptions shouldn't be raised"]})]})]}),(0,r.jsxs)("tr",{style:{border:"none"},children:[(0,r.jsx)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"},children:(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.strong,{children:"Raises"}),":"]})}),(0,r.jsxs)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"},children:[(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"InputValidationError"}),": if one of the input items is in the wrong format"]}),(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"NoFilesDownloaded"}),": if no files could be downloaded"]}),(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"NotAllFilesDownloaded"}),": if not all files could be downloaded"]}),(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"RucioException"}),": if something unexpected went wrong during the download"]})]})]}),(0,r.jsxs)("tr",{style:{border:"none"},children:[(0,r.jsx)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"},children:(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.strong,{children:"Returns"}),":"]})}),(0,r.jsx)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"},children:(0,r.jsx)(o.p,{children:"a list of dictionaries with an entry for each file, containing the input options, the did, and the clientState"})})]})]})})]}),"\n",(0,r.jsx)(o.h2,{id:"download_aria2c",children:"download_aria2c"}),"\n",(0,r.jsxs)("span",{style:{"white-space":"pre"},children:[(0,r.jsx)(o.p,{children:"Uses aria2c to download the items with given DIDs. This function can also download datasets and wildcarded DIDs."}),(0,r.jsx)(o.p,{children:"It only can download files that are available via https/davs.\nAria2c needs to be installed and X509_USER_PROXY needs to be set!"}),(0,r.jsx)("table",{style:{border:"none"},children:(0,r.jsxs)("tbody",{children:[(0,r.jsxs)("tr",{style:{border:"none"},children:[(0,r.jsx)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"},children:(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.strong,{children:"Arguments"}),":"]})}),(0,r.jsxs)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"},children:[(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"items"}),": List of dictionaries. Each dictionary describing an item to download. Keys:\ndid                            - DID string of this file (e.g. 'scope",":file",".name'). Wildcards are not allowed\nrse                            - Optional: rse name (e.g. 'CERN-PROD_DATADISK') or rse expression from where to download\nbase_dir                       - Optional: base directory where the downloaded files will be stored. (Default: '.')\nno_subdir                      - Optional: If true, files are written directly into base_dir. (Default: False)\nnrandom                        - Optional: if the DID addresses a dataset, nrandom files will be randomly chosen for download from the dataset\nignore_checksum                - Optional: If true, skips the checksum validation between the downloaded file and the rucio catalouge. (Default: False)\ncheck_local_with_filesize_only - Optional: If true, already downloaded files will not be validated by checksum."]}),(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"trace_custom_fields"}),": Custom key value pairs to send with the traces"]}),(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"filters"}),": dictionary containing filter options"]}),(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"deactivate_file_download_exceptions"}),": Boolean, if file download exceptions shouldn't be raised"]}),(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"sort"}),": Select best replica by replica sorting algorithm. Available algorithms:\n",(0,r.jsx)(o.code,{children:"geoip"}),"       - based on src/dst IP topographical distance\n",(0,r.jsx)(o.code,{children:"closeness"}),"   - based on src/dst closeness\n",(0,r.jsx)(o.code,{children:"dynamic"}),"     - Rucio Dynamic Smart Sort (tm)"]})]})]}),(0,r.jsxs)("tr",{style:{border:"none"},children:[(0,r.jsx)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"},children:(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.strong,{children:"Raises"}),":"]})}),(0,r.jsxs)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"},children:[(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"InputValidationError"}),": if one of the input items is in the wrong format"]}),(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"NoFilesDownloaded"}),": if no files could be downloaded"]}),(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"NotAllFilesDownloaded"}),": if not all files could be downloaded"]}),(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"RucioException"}),": if something went wrong during the download (e.g. aria2c could not be started)"]})]})]}),(0,r.jsxs)("tr",{style:{border:"none"},children:[(0,r.jsx)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"},children:(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.strong,{children:"Returns"}),":"]})}),(0,r.jsx)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"},children:(0,r.jsx)(o.p,{children:"a list of dictionaries with an entry for each file, containing the input options, the did, and the clientState"})})]})]})})]}),"\n",(0,r.jsx)(o.h2,{id:"preferred_impl",children:"preferred_impl"}),"\n",(0,r.jsxs)("span",{style:{"white-space":"pre"},children:[(0,r.jsx)(o.p,{children:"Finds the optimum protocol impl preferred by the client and"}),(0,r.jsx)(o.p,{children:"supported by the remote RSE."}),(0,r.jsx)("table",{style:{border:"none"},children:(0,r.jsxs)("tbody",{children:[(0,r.jsxs)("tr",{style:{border:"none"},children:[(0,r.jsx)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"},children:(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.strong,{children:"Arguments"}),":"]})}),(0,r.jsx)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"},children:(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"sources"}),": List of sources for a given DID"]})})]}),(0,r.jsxs)("tr",{style:{border:"none"},children:[(0,r.jsx)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"},children:(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.strong,{children:"Raises"}),":"]})}),(0,r.jsx)("td",{style:{border:"none",backgroundColor:"var(--ifm-background-color)",verticalAlign:"top"},children:(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"RucioException(msg)"}),": general exception with msg for more details."]})})]})]})})]})]})}function h(e={}){const{wrapper:o}={...(0,l.R)(),...e.components};return o?(0,r.jsx)(o,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},28453:(e,o,n)=>{n.d(o,{R:()=>d,x:()=>t});var i=n(96540);const r={},l=i.createContext(r);function d(e){const o=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function t(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),i.createElement(l.Provider,{value:o},e.children)}}}]);