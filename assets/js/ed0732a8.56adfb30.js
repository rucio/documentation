"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[303],{15680:(e,t,r)=>{r.d(t,{xA:()=>p,yg:()=>f});var n=r(96540);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),s=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},l="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),l=s(r),m=o,f=l["".concat(u,".").concat(m)]||l[m]||d[m]||i;return r?n.createElement(f,a(a({ref:t},p),{},{components:r})):n.createElement(f,a({ref:t},p))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=m;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c[l]="string"==typeof e?e:o,a[1]=c;for(var s=2;s<i;s++)a[s]=r[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},66107:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>u,default:()=>f,frontMatter:()=>c,metadata:()=>s,toc:()=>l});var n=r(58168),o=r(98587),i=(r(96540),r(15680)),a=["components"],c={title:"rucio-auditor"},u=void 0,s={unversionedId:"bin/rucio-auditor",id:"bin/rucio-auditor",title:"rucio-auditor",description:"",source:"@site/../docs/bin/rucio-auditor.md",sourceDirName:"bin",slug:"/bin/rucio-auditor",permalink:"/documentation/bin/rucio-auditor",draft:!1,editUrl:"https://github.com/rucio/documentation/tree/main/docs/../docs/bin/rucio-auditor.md",tags:[],version:"current",frontMatter:{title:"rucio-auditor"},sidebar:"docs",previous:{title:"rucio-atropos",permalink:"/documentation/bin/rucio-atropos"},next:{title:"rucio-automatix",permalink:"/documentation/bin/rucio-automatix"}},p={},l=[],d={toc:l},m="wrapper";function f(e){var t=e.components,r=(0,o.A)(e,a);return(0,i.yg)(m,(0,n.A)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},'usage: rucio-auditor [-h] [--nprocs NPROCS] [--rses RSES] [--keep-dumps]\n                     [--delta DELTA]\n\nThe auditor daemon is the one responsible for the detection of inconsistencies on storage, i.e.: dark data discovery.\n\noptional arguments:\n  -h, --help       show this help message and exit\n  --nprocs NPROCS  Number subprocess, each subprocess check a fraction of the\n                   DDM Endpoints in sequence (default: 1).\n  --rses RSES      RSEs to check specified as a RSE expression, defaults to\n                   check all the RSEs known to Rucio (default: check all\n                   RSEs).\n  --keep-dumps     Keep RSE and Rucio Replica Dumps on cache (default: False).\n  --delta DELTA    How many days older/newer than the RSE dump must the Rucio\n                   replica dumps be (default: 3).\n\nexamples:\n    # Check all RSEs using only 1 subprocess\n    rucio-auditor\n\n    # Check all SCRATCHDISKs with 4 subprocesses\n    rucio-auditor --nprocs 4 --rses "type=SCRATCHDISK"\n\n    # Check all Tier 2 DATADISKs, except "BLUE_DATADISK" and "RED_DATADISK"\n    rucio-auditor --rses "tier=1&type=DATADISK\\(BLUE_DATADISK|RED_DATADISK)"\n')))}f.isMDXComponent=!0}}]);