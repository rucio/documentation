"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[89107],{28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>c});var o=t(96540);const r={},i=o.createContext(r);function s(e){const n=o.useContext(i);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(i.Provider,{value:n},e.children)}},97206:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>m,frontMatter:()=>s,metadata:()=>o,toc:()=>u});const o=JSON.parse('{"id":"bin/rucio-minos-temporary-expiration","title":"rucio-minos-temporary-expiration","description":"","source":"@site/../docs/bin/rucio-minos-temporary-expiration.md","sourceDirName":"bin","slug":"/bin/rucio-minos-temporary-expiration","permalink":"/documentation/bin/rucio-minos-temporary-expiration","draft":false,"unlisted":false,"editUrl":"https://github.com/rucio/documentation/tree/main/docs/../docs/bin/rucio-minos-temporary-expiration.md","tags":[],"version":"current","lastUpdatedBy":null,"lastUpdatedAt":null,"frontMatter":{"title":"rucio-minos-temporary-expiration"},"sidebar":"docs","previous":{"title":"rucio-kronos","permalink":"/documentation/bin/rucio-kronos"},"next":{"title":"rucio-minos","permalink":"/documentation/bin/rucio-minos"}}');var r=t(74848),i=t(28453);const s={title:"rucio-minos-temporary-expiration"},c=void 0,a={},u=[];function p(e){const n={code:"code",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"usage: rucio-minos-temporary-expiration [-h] [--run-once] [--threads THREADS]\n                                        [--bulk BULK]\n                                        [--sleep-time SLEEP_TIME]\n\nThis special type of minos daemon lists the expired TEMPORARY_UNAVAILABLE\nreplicas and puts them back into AVAILABLE state.\n\noptions:\n  -h, --help            show this help message and exit\n  --run-once            Runs one loop iteration\n  --threads THREADS     Concurrency control: number of threads\n  --bulk BULK           Bulk control: number of requests per cycle\n  --sleep-time SLEEP_TIME\n                        Seconds to sleep if few requests\n"})})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}}}]);