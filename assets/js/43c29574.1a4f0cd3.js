"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1012],{95371:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>u,contentTitle:()=>s,default:()=>d,frontMatter:()=>c,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"bin/rucio-conveyor-finisher","title":"rucio-conveyor-finisher","description":"","source":"@site/../docs/bin/rucio-conveyor-finisher.md","sourceDirName":"bin","slug":"/bin/rucio-conveyor-finisher","permalink":"/documentation/bin/rucio-conveyor-finisher","draft":false,"unlisted":false,"editUrl":"https://github.com/rucio/documentation/tree/main/docs/../docs/bin/rucio-conveyor-finisher.md","tags":[],"version":"current","frontMatter":{"title":"rucio-conveyor-finisher"},"sidebar":"docs","previous":{"title":"rucio-cache-consumer","permalink":"/documentation/bin/rucio-cache-consumer"},"next":{"title":"rucio-conveyor-poller","permalink":"/documentation/bin/rucio-conveyor-poller"}}');var r=o(74848),i=o(28453);const c={title:"rucio-conveyor-finisher"},s=void 0,u={},a=[];function l(e){const n={code:"code",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"usage: rucio-conveyor-finisher [-h] [--run-once]\n                               [--total-threads TOTAL_THREADS]\n                               [--db-bulk DB_BULK] [--bulk BULK]\n                               [--sleep-time SLEEP_TIME]\n                               [--activities ACTIVITIES [ACTIVITIES ...]]\n\nConveyor is a group of daemons to manage file transfers. The conveyor-finisher\nis the responsible to update Rucio internal state after the transfer has\nfinished.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --run-once            One iteration only\n  --total-threads TOTAL_THREADS\n                        Concurrency control: total number of threads per\n                        process\n  --db-bulk DB_BULK     Bulk control: number of transfers per db query\n  --bulk BULK           Bulk control: number of requests\n  --sleep-time SLEEP_TIME\n                        Seconds to sleep if few requests\n  --activities ACTIVITIES [ACTIVITIES ...]\n                        Explicit list of activities to include\n"})})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>c,x:()=>s});var t=o(96540);const r={},i=t.createContext(r);function c(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);