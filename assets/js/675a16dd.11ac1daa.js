"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9825],{24731:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>c,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"bin/rucio-conveyor-submitter","title":"rucio-conveyor-submitter","description":"","source":"@site/../docs/bin/rucio-conveyor-submitter.md","sourceDirName":"bin","slug":"/bin/rucio-conveyor-submitter","permalink":"/documentation/bin/rucio-conveyor-submitter","draft":false,"unlisted":false,"editUrl":"https://github.com/rucio/documentation/tree/main/docs/../docs/bin/rucio-conveyor-submitter.md","tags":[],"version":"current","frontMatter":{"title":"rucio-conveyor-submitter"},"sidebar":"docs","previous":{"title":"rucio-conveyor-stager","permalink":"/documentation/bin/rucio-conveyor-stager"},"next":{"title":"rucio-conveyor-throttler","permalink":"/documentation/bin/rucio-conveyor-throttler"}}');var r=n(74848),s=n(28453);const i={title:"rucio-conveyor-submitter"},c=void 0,u={},a=[];function l(e){const t={code:"code",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"usage: rucio-conveyor-submitter [-h] [--run-once]\n                                [--total-threads TOTAL_THREADS] [--bulk BULK]\n                                [--group-bulk GROUP_BULK]\n                                [--group-policy GROUP_POLICY]\n                                [--source-strategy SOURCE_STRATEGY]\n                                [--exclude-rses EXCLUDE_RSES]\n                                [--include-rses INCLUDE_RSES]\n                                [--rses RSES [RSES ...]] [--vos VOS [VOS ...]]\n                                [--activities ACTIVITIES [ACTIVITIES ...]]\n                                [--exclude-activities EXCLUDE_ACTIVITIES [EXCLUDE_ACTIVITIES ...]]\n                                [--ignore-availability]\n                                [--sleep-time SLEEP_TIME]\n                                [--max-sources MAX_SOURCES]\n                                [--archive-timeout-override INTEGER_SECONDS]\n\nThe Conveyor-Submitter daemon is responsible for managing non-tape file transfers. It prepares transfer jobs and submits them to the transfertool.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --run-once            One iteration only\n  --total-threads TOTAL_THREADS\n                        Concurrency control: total number of threads per\n                        process\n  --bulk BULK           Bulk control: number of requests\n  --group-bulk GROUP_BULK\n                        Group control: number of requests per group\n  --group-policy GROUP_POLICY\n                        Group control: policy used to group. enum{rule, dest,\n                        src_dest, rule_src_dest, activity_dest,\n                        activity_src_dest}\n  --source-strategy SOURCE_STRATEGY\n                        Source strategy. Overload the strategy defined in\n                        config DB.\n  --exclude-rses EXCLUDE_RSES\n                        RSE expression to exclude\n  --include-rses INCLUDE_RSES\n                        RSE expression to include\n  --rses RSES [RSES ...]\n                        Explicit list of RSEs to include\n  --vos VOS [VOS ...]   Optional list of VOs to consider. Only used in multi-\n                        VO mode.\n  --activities ACTIVITIES [ACTIVITIES ...]\n                        Explicit list of activities to include\n  --exclude-activities EXCLUDE_ACTIVITIES [EXCLUDE_ACTIVITIES ...]\n                        Explicit list of activities to exclude\n  --ignore-availability\n                        If True, will also try to submit transfers having\n                        blocklisted RSEs as sources\n  --sleep-time SLEEP_TIME\n                        Seconds to sleep if few requests\n  --max-sources MAX_SOURCES\n                        Maximum source replicas per multi-source FTS job\n  --archive-timeout-override INTEGER_SECONDS\n                        Override the archive_timeout parameter for any\n                        transfers with it set (0 to unset)\n\nUpload a file and create a replication rule::\n\n  $ rucio upload --scope mock --rse MOCK --name file filename.txt\n  $ rucio add-rule mock:file 1 MOCK2\n  $ rucio-admin rse add-distance MOCK2 MOCK --distance 1\n\nThe rule should replicate the file from RSE MOCK to RSE MOCK2. Therefore a distance between these RSEs is needed.\n\nCheck transfer requests for the DID::\n\n    $ python\n    from rucio.db.sqla import session,models\n    session.get_session().query(models.Request).filter_by(scope='mock', name='file').first()\n    # {'request_type': TRANSFER, 'state': QUEUED', ...}\n\nA queued request was created which can be picked uped by the Conveyor-Submiter daemon.\n\nRun the daemon::\n\n  $ rucio-conveyor-submitter --run-once\n\nCheck again the transfer requests for the DID::\n\n    $ python\n    from rucio.db.sqla import session,models\n    session.get_session().query(models.Request).filter_by(scope='mock', name='file').first()\n    # {'request_type': TRANSFER, 'state': SUBMITTED', ...}\n\nA transfer request got created by executing the transfer. Depending on the transfer submission, the request state can be different. In this example the transfer got submitted successfully.\n\nWhen run in multi-VO mode, by default the daemon will run on RSEs from all VOs::\n\n  $ rucio-conveyor-submitter --run-once\n  2020-07-29 13:51:09,436 5784    INFO    This instance will work on VOs: def, abc, xyz, 123\n  2020-07-29 13:51:13,315 5784    INFO    RSE selection: automatic for relevant VOs\n  2020-07-29 13:51:13,316 5784    INFO    starting submitter threads\n\nBy using the ``--vos`` argument only the VO or VOs specified will be affected::\n\n  $ rucio-conveyor-submitter --run-once --vos abc xyz\n  2020-07-29 13:51:09,436 5784    INFO    This instance will work on VOs: abc, xyz\n  2020-07-29 13:51:13,315 5784    INFO    RSE selection: automatic for relevant VOs\n  2020-07-29 13:51:13,316 5784    INFO    starting submitter threads\n\nNote that attempting the use the ``--vos`` argument when in single-VO mode will have no affect::\n\n  $ rucio-conveyor-submitter --run-once --vos abc xyz\n  2020-07-29 13:39:37,263 5752    INFO    RSE selection: automatic\n  2020-07-29 13:39:37,264 5752    INFO    starting submitter threads\n    \n"})})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var o=n(96540);const r={},s=o.createContext(r);function i(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);