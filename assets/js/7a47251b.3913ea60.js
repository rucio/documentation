"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[21734],{28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>c});var s=t(96540);const o={},r=s.createContext(o);function i(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(r.Provider,{value:n},e.children)}},62772:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"developer/testing/testing_fts_and_conveyor","title":"Testing FTS and the conveyor","description":"Test setup","source":"@site/../docs/developer/testing/fts_and_conveyor.md","sourceDirName":"developer/testing","slug":"/developer/testing/testing_fts_and_conveyor","permalink":"/documentation/developer/testing/testing_fts_and_conveyor","draft":false,"unlisted":false,"editUrl":"https://github.com/rucio/documentation/tree/main/docs/../docs/developer/testing/fts_and_conveyor.md","tags":[],"version":"current","lastUpdatedBy":"Martin Barisits","lastUpdatedAt":1761755297000,"frontMatter":{"id":"testing_fts_and_conveyor","title":"Testing FTS and the conveyor"},"sidebar":"docs","previous":{"title":"Style Guide","permalink":"/documentation/developer/dev_style_guide"},"next":{"title":"Type Annotation Guide","permalink":"/documentation/developer/type_annotation_guide"}}');var o=t(74848),r=t(28453);const i={id:"testing_fts_and_conveyor",title:"Testing FTS and the conveyor"},c=void 0,d={},l=[{value:"Test setup",id:"test-setup",level:2},{value:"Submitting a transfer",id:"submitting-a-transfer",level:2},{value:"Where to find logs",id:"where-to-find-logs",level:2},{value:"Web monitoring",id:"web-monitoring",level:3},{value:"FTS container",id:"fts-container",level:3},{value:"ActiveMQ",id:"activemq",level:3},{value:"Testing older versions of FTS",id:"testing-older-versions-of-fts",level:2}];function a(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"test-setup",children:"Test setup"}),"\n",(0,o.jsxs)(n.p,{children:["To test FTS and the Conveyor, you should start the development environment, including the Rucio server and the FTS server;\nsee ",(0,o.jsx)(n.a,{href:"/documentation/operator/setting_up_demo",children:"Setting up a Rucio demo environment"})," for more information."]}),"\n",(0,o.jsxs)(n.p,{children:["The required profiles are ",(0,o.jsx)(n.code,{children:"storage"})," (for the FTS and XRD containers) and ",(0,o.jsx)(n.code,{children:"iam"})," (for the token-related Conveyor tests).\nMake sure to pass ",(0,o.jsx)(n.code,{children:"-f etc/docker/dev/docker-compose.ports.yml"})," if you want to access the FTS Web Monitoring UI (see below).\nThe recommended setup command is as follows:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:"docker compose -f etc/docker/dev/docker-compose.yml -f etc/docker/dev/docker-compose.ports.yml --profile storage --profile iam up -d\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Once the containers are running, you should initialize the tests.\nMost of the Conveyor tests require the default test RSEs to be set up.\nIf using the ",(0,o.jsx)(n.code,{children:"tools/run_tests.sh"})," script, you should pass the ",(0,o.jsx)(n.code,{children:"-r"})," flag to set the RSEs up."]}),"\n",(0,o.jsx)(n.h2,{id:"submitting-a-transfer",children:"Submitting a transfer"}),"\n",(0,o.jsxs)(n.p,{children:["Running the ",(0,o.jsx)(n.code,{children:"conveyor-submitter"})," daemon will submit transfers to FTS. You can find documentation for this daemon ",(0,o.jsx)(n.a,{href:"https://rucio.github.io/documentation/bin/rucio-conveyor-submitter",children:"here"})]}),"\n",(0,o.jsxs)(n.p,{children:["You can also use the ",(0,o.jsx)(n.code,{children:"fts-rest-transfer-submit"})," command to manually submit a transfer. For example:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:'fts-rest-transfer-submit --checksum-mode both -s https://fts3-pilot.cern.ch:8446/ "mock://source.ch/file?size=1024&checksum=1234abcd" "mock://destination.ch/file?size_post=1024&checksum=1234abcd" adler32:1234abcd\n'})}),"\n",(0,o.jsx)(n.h2,{id:"where-to-find-logs",children:"Where to find logs"}),"\n",(0,o.jsxs)(n.p,{children:["Most of the Conveyor tests found in ",(0,o.jsx)(n.a,{href:"https://github.com/rucio/rucio/blob/master/tests/test_conveyor.py",children:(0,o.jsx)(n.code,{children:"tests/test_conveyor.py"})}),"\nsubmit their transfers via FTS, so you can find the logs as part of the FTS and ActiveMQ containers."]}),"\n",(0,o.jsx)(n.h3,{id:"web-monitoring",children:"Web monitoring"}),"\n",(0,o.jsxs)(n.p,{children:["Transfers can be monitored via the FTS Web Monitoring UI.\nTo set this up, make sure to pass the ",(0,o.jsx)(n.code,{children:"docker-compose.ports.yml"})," file to the Docker compose command when setting up the tests:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:"# Note: specify profiles as well, if needed\ndocker compose -f etc/docker/dev/docker-compose.yml -f etc/docker/dev/docker-compose.ports.yml up -d\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Once running, you should be able to access the WebUI locally at ",(0,o.jsx)(n.a,{href:"https://localhost:8449/fts3/ftsmon/#/",children:"https://localhost:8449/fts3/ftsmon/#/"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"For reference:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://fts3-docs.web.cern.ch/fts3-docs/docs/install/fts3mon.html",children:"FTS3 Web Monitoring"})}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"fts-container",children:"FTS container"}),"\n",(0,o.jsx)(n.p,{children:"In the FTS container, you can see the transfer status by running:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:"fts-rest-transfer-status -s https://fts:8446 [transfer_id]\n"})}),"\n",(0,o.jsxs)(n.p,{children:["You can also find transfer logs in ",(0,o.jsx)(n.code,{children:"/var/log/fts3/"}),"."]}),"\n",(0,o.jsx)(n.h3,{id:"activemq",children:"ActiveMQ"}),"\n",(0,o.jsxs)(n.p,{children:["The ActiveMQ logs are in the FTS container, and can be found in ",(0,o.jsx)(n.code,{children:"/var/log/fts3/msg.log"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["The config file is in the ActiveMQ container, in ",(0,o.jsx)(n.code,{children:"/opt/apache-activemq/conf"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"testing-older-versions-of-fts",children:"Testing older versions of FTS"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"rucio/fts"})," container does not pin the versions of the FTS packages,\nso even if you installed an older version of this container,\nit would install the latest versions of the FTS packages."]}),"\n",(0,o.jsx)(n.p,{children:"To test older versions of FTS:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Change the FTS container's Dockerfile's ",(0,o.jsx)(n.code,{children:"dnf"})," dependency installation command to point to the desired FTS versions"]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["For example, for ",(0,o.jsx)(n.code,{children:"3.13.3"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-Dockerfile",children:"RUN dnf install --nogpgcheck -y \\\n  fts-server-3.13.3 \\\n  fts-mysql-3.13.3 \\\n  fts-rest-client-3.13.3 \\\n  fts-rest-server-3.13.3 \\\n  fts-monitoring-3.13.3 \\\n  fts-server-selinux-3.13.3 \\\n  fts-rest-server-selinux-3.13.3 \\\n  fts-monitoring-selinux-3.13.3 \\\n  fts-msg-3.13.3 \\\n  mysql \\\n  multitail \\\n  gfal2-plugin*\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"2",children:["\n",(0,o.jsxs)(n.li,{children:["Run ",(0,o.jsx)(n.code,{children:"docker system prune -af"})," in order to clear the regular ",(0,o.jsx)(n.code,{children:"rucio/fts"})," installation from the system."]}),"\n",(0,o.jsxs)(n.li,{children:["Build the custom FTS container locally via ",(0,o.jsx)(n.code,{children:"docker build ."}),", and point the ",(0,o.jsx)(n.code,{children:"etc/docker/dev/docker-compose.yml"})," file to the custom FTS container."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}}}]);