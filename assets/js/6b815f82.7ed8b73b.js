"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[76813],{90516:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>u,contentTitle:()=>c,default:()=>m,frontMatter:()=>a,metadata:()=>o,toc:()=>s});const o=JSON.parse('{"id":"bin/rucio-automatix","title":"rucio-automatix","description":"","source":"@site/../docs/bin/rucio-automatix.md","sourceDirName":"bin","slug":"/bin/rucio-automatix","permalink":"/documentation/bin/rucio-automatix","draft":false,"unlisted":false,"editUrl":"https://github.com/rucio/documentation/tree/main/docs/../docs/bin/rucio-automatix.md","tags":[],"version":"current","frontMatter":{"title":"rucio-automatix"},"sidebar":"docs","previous":{"title":"rucio-auditor","permalink":"/documentation/bin/rucio-auditor"},"next":{"title":"rucio-bb8","permalink":"/documentation/bin/rucio-bb8"}}');var i=n(74848),r=n(28453);const a={title:"rucio-automatix"},c=void 0,u={},s=[];function d(t){const e={code:"code",pre:"pre",...(0,r.R)(),...t.components};return(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"usage: rucio-automatix [-h] [--run-once] [--input-file INPUT_FILE]\n                       [--threads-per-process THREADS_PER_PROCESS]\n                       [--sleep-time SLEEP_TIME]\n\nAutomatix is a daemon used to inject random generated files to an RSE. It is\nused to continuously check that an RSE is reachable and operating as expected.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --run-once            Runs one loop iteration\n  --input-file INPUT_FILE\n                        Automatix configuration\n  --threads-per-process THREADS_PER_PROCESS\n                        Total number of workers per process\n  --sleep-time SLEEP_TIME\n                        Concurrency control: thread sleep time after each\n                        chunk of work\n"})})}function m(t={}){const{wrapper:e}={...(0,r.R)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(d,{...t})}):d(t)}},28453:(t,e,n)=>{n.d(e,{R:()=>a,x:()=>c});var o=n(96540);const i={},r=o.createContext(i);function a(t){const e=o.useContext(r);return o.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function c(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:a(t.components),o.createElement(r.Provider,{value:e},t.children)}}}]);